#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~ ImportStatements 
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

from _glcommon import *

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~ Code generated from "OpenGL/gl.h"
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class GLenum(c_ulong):
    """typedef GLenum"""
class GLboolean(c_ubyte):
    """typedef GLboolean"""
class GLbitfield(c_ulong):
    """typedef GLbitfield"""
class GLbyte(c_byte):
    """typedef GLbyte"""
class GLshort(c_short):
    """typedef GLshort"""
class GLint(c_long):
    """typedef GLint"""
class GLsizei(c_long):
    """typedef GLsizei"""
class GLubyte(c_ubyte):
    """typedef GLubyte"""
class GLushort(c_ushort):
    """typedef GLushort"""
class GLuint(c_ulong):
    """typedef GLuint"""
class GLfloat(c_float):
    """typedef GLfloat"""
class GLclampf(c_float):
    """typedef GLclampf"""
class GLdouble(c_double):
    """typedef GLdouble"""
class GLclampd(c_double):
    """typedef GLclampd"""
GLvoid = None # typedef GLvoid

class GLintptr(c_long):
    """typedef GLintptr"""
class GLsizeiptr(c_long):
    """typedef GLsizeiptr"""

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class GLchar(c_char):
    """typedef GLchar"""

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_LOGIC_OP = 0x0BF1 # = GL_INDEX_LOGIC_OP
GL_TEXTURE_COMPONENTS = 0x1003 # = GL_TEXTURE_INTERNAL_FORMAT

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_VERSION_1_1 = 1
GL_VERSION_1_2 = 1
GL_VERSION_1_3 = 1
GL_VERSION_1_4 = 1
GL_VERSION_1_5 = 1
GL_VERSION_2_0 = 1

GL_ACCUM = 0x0100
GL_LOAD = 0x0101
GL_RETURN = 0x0102
GL_MULT = 0x0103
GL_ADD = 0x0104

GL_NEVER = 0x0200
GL_LESS = 0x0201
GL_EQUAL = 0x0202
GL_LEQUAL = 0x0203
GL_GREATER = 0x0204
GL_NOTEQUAL = 0x0205
GL_GEQUAL = 0x0206
GL_ALWAYS = 0x0207

GL_CURRENT_BIT = 0x00000001
GL_POINT_BIT = 0x00000002
GL_LINE_BIT = 0x00000004
GL_POLYGON_BIT = 0x00000008
GL_POLYGON_STIPPLE_BIT = 0x00000010
GL_PIXEL_MODE_BIT = 0x00000020
GL_LIGHTING_BIT = 0x00000040
GL_FOG_BIT = 0x00000080
GL_DEPTH_BUFFER_BIT = 0x00000100
GL_ACCUM_BUFFER_BIT = 0x00000200
GL_STENCIL_BUFFER_BIT = 0x00000400
GL_VIEWPORT_BIT = 0x00000800
GL_TRANSFORM_BIT = 0x00001000
GL_ENABLE_BIT = 0x00002000
GL_COLOR_BUFFER_BIT = 0x00004000
GL_HINT_BIT = 0x00008000
GL_EVAL_BIT = 0x00010000
GL_LIST_BIT = 0x00020000
GL_TEXTURE_BIT = 0x00040000
GL_SCISSOR_BIT = 0x00080000
GL_ALL_ATTRIB_BITS = 0x000fffff

GL_POINTS = 0x0000
GL_LINES = 0x0001
GL_LINE_LOOP = 0x0002
GL_LINE_STRIP = 0x0003
GL_TRIANGLES = 0x0004
GL_TRIANGLE_STRIP = 0x0005
GL_TRIANGLE_FAN = 0x0006
GL_QUADS = 0x0007
GL_QUAD_STRIP = 0x0008
GL_POLYGON = 0x0009

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_ZERO = 0
GL_ONE = 1
GL_SRC_COLOR = 0x0300
GL_ONE_MINUS_SRC_COLOR = 0x0301
GL_SRC_ALPHA = 0x0302
GL_ONE_MINUS_SRC_ALPHA = 0x0303
GL_DST_ALPHA = 0x0304
GL_ONE_MINUS_DST_ALPHA = 0x0305

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_DST_COLOR = 0x0306
GL_ONE_MINUS_DST_COLOR = 0x0307
GL_SRC_ALPHA_SATURATE = 0x0308

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_TRUE = 1
GL_FALSE = 0

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_CLIP_PLANE0 = 0x3000
GL_CLIP_PLANE1 = 0x3001
GL_CLIP_PLANE2 = 0x3002
GL_CLIP_PLANE3 = 0x3003
GL_CLIP_PLANE4 = 0x3004
GL_CLIP_PLANE5 = 0x3005

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_BYTE = 0x1400
GL_UNSIGNED_BYTE = 0x1401
GL_SHORT = 0x1402
GL_UNSIGNED_SHORT = 0x1403
GL_INT = 0x1404
GL_UNSIGNED_INT = 0x1405
GL_FLOAT = 0x1406
GL_2_BYTES = 0x1407
GL_3_BYTES = 0x1408
GL_4_BYTES = 0x1409
GL_DOUBLE = 0x140A

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_NONE = 0
GL_FRONT_LEFT = 0x0400
GL_FRONT_RIGHT = 0x0401
GL_BACK_LEFT = 0x0402
GL_BACK_RIGHT = 0x0403
GL_FRONT = 0x0404
GL_BACK = 0x0405
GL_LEFT = 0x0406
GL_RIGHT = 0x0407
GL_FRONT_AND_BACK = 0x0408
GL_AUX0 = 0x0409
GL_AUX1 = 0x040A
GL_AUX2 = 0x040B
GL_AUX3 = 0x040C

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_NO_ERROR = 0
GL_INVALID_ENUM = 0x0500
GL_INVALID_VALUE = 0x0501
GL_INVALID_OPERATION = 0x0502
GL_STACK_OVERFLOW = 0x0503
GL_STACK_UNDERFLOW = 0x0504
GL_OUT_OF_MEMORY = 0x0505

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_2D = 0x0600
GL_3D = 0x0601
GL_3D_COLOR = 0x0602
GL_3D_COLOR_TEXTURE = 0x0603
GL_4D_COLOR_TEXTURE = 0x0604

GL_PASS_THROUGH_TOKEN = 0x0700
GL_POINT_TOKEN = 0x0701
GL_LINE_TOKEN = 0x0702
GL_POLYGON_TOKEN = 0x0703
GL_BITMAP_TOKEN = 0x0704
GL_DRAW_PIXEL_TOKEN = 0x0705
GL_COPY_PIXEL_TOKEN = 0x0706
GL_LINE_RESET_TOKEN = 0x0707

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_EXP = 0x0800
GL_EXP2 = 0x0801

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_CW = 0x0900
GL_CCW = 0x0901

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_COEFF = 0x0A00
GL_ORDER = 0x0A01
GL_DOMAIN = 0x0A02

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_CURRENT_COLOR = 0x0B00
GL_CURRENT_INDEX = 0x0B01
GL_CURRENT_NORMAL = 0x0B02
GL_CURRENT_TEXTURE_COORDS = 0x0B03
GL_CURRENT_RASTER_COLOR = 0x0B04
GL_CURRENT_RASTER_INDEX = 0x0B05
GL_CURRENT_RASTER_TEXTURE_COORDS = 0x0B06
GL_CURRENT_RASTER_POSITION = 0x0B07
GL_CURRENT_RASTER_POSITION_VALID = 0x0B08
GL_CURRENT_RASTER_DISTANCE = 0x0B09
GL_POINT_SMOOTH = 0x0B10
GL_POINT_SIZE = 0x0B11
GL_POINT_SIZE_RANGE = 0x0B12
GL_POINT_SIZE_GRANULARITY = 0x0B13
GL_LINE_SMOOTH = 0x0B20
GL_LINE_WIDTH = 0x0B21
GL_LINE_WIDTH_RANGE = 0x0B22
GL_LINE_WIDTH_GRANULARITY = 0x0B23
GL_LINE_STIPPLE = 0x0B24
GL_LINE_STIPPLE_PATTERN = 0x0B25
GL_LINE_STIPPLE_REPEAT = 0x0B26

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_LIST_MODE = 0x0B30
GL_MAX_LIST_NESTING = 0x0B31
GL_LIST_BASE = 0x0B32
GL_LIST_INDEX = 0x0B33
GL_POLYGON_MODE = 0x0B40
GL_POLYGON_SMOOTH = 0x0B41
GL_POLYGON_STIPPLE = 0x0B42
GL_EDGE_FLAG = 0x0B43
GL_CULL_FACE = 0x0B44
GL_CULL_FACE_MODE = 0x0B45
GL_FRONT_FACE = 0x0B46
GL_LIGHTING = 0x0B50
GL_LIGHT_MODEL_LOCAL_VIEWER = 0x0B51
GL_LIGHT_MODEL_TWO_SIDE = 0x0B52
GL_LIGHT_MODEL_AMBIENT = 0x0B53
GL_SHADE_MODEL = 0x0B54
GL_COLOR_MATERIAL_FACE = 0x0B55
GL_COLOR_MATERIAL_PARAMETER = 0x0B56
GL_COLOR_MATERIAL = 0x0B57
GL_FOG = 0x0B60
GL_FOG_INDEX = 0x0B61
GL_FOG_DENSITY = 0x0B62
GL_FOG_START = 0x0B63
GL_FOG_END = 0x0B64
GL_FOG_MODE = 0x0B65
GL_FOG_COLOR = 0x0B66
GL_DEPTH_RANGE = 0x0B70
GL_DEPTH_TEST = 0x0B71
GL_DEPTH_WRITEMASK = 0x0B72
GL_DEPTH_CLEAR_VALUE = 0x0B73
GL_DEPTH_FUNC = 0x0B74
GL_ACCUM_CLEAR_VALUE = 0x0B80
GL_STENCIL_TEST = 0x0B90
GL_STENCIL_CLEAR_VALUE = 0x0B91
GL_STENCIL_FUNC = 0x0B92
GL_STENCIL_VALUE_MASK = 0x0B93
GL_STENCIL_FAIL = 0x0B94
GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95
GL_STENCIL_PASS_DEPTH_PASS = 0x0B96
GL_STENCIL_REF = 0x0B97
GL_STENCIL_WRITEMASK = 0x0B98
GL_MATRIX_MODE = 0x0BA0
GL_NORMALIZE = 0x0BA1
GL_VIEWPORT = 0x0BA2
GL_MODELVIEW_STACK_DEPTH = 0x0BA3
GL_PROJECTION_STACK_DEPTH = 0x0BA4
GL_TEXTURE_STACK_DEPTH = 0x0BA5
GL_MODELVIEW_MATRIX = 0x0BA6
GL_PROJECTION_MATRIX = 0x0BA7
GL_TEXTURE_MATRIX = 0x0BA8
GL_ATTRIB_STACK_DEPTH = 0x0BB0
GL_CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1
GL_ALPHA_TEST = 0x0BC0
GL_ALPHA_TEST_FUNC = 0x0BC1
GL_ALPHA_TEST_REF = 0x0BC2
GL_DITHER = 0x0BD0
GL_BLEND_DST = 0x0BE0
GL_BLEND_SRC = 0x0BE1
GL_BLEND = 0x0BE2
GL_LOGIC_OP_MODE = 0x0BF0
GL_INDEX_LOGIC_OP = 0x0BF1
GL_COLOR_LOGIC_OP = 0x0BF2
GL_AUX_BUFFERS = 0x0C00
GL_DRAW_BUFFER = 0x0C01
GL_READ_BUFFER = 0x0C02
GL_SCISSOR_BOX = 0x0C10
GL_SCISSOR_TEST = 0x0C11
GL_INDEX_CLEAR_VALUE = 0x0C20
GL_INDEX_WRITEMASK = 0x0C21
GL_COLOR_CLEAR_VALUE = 0x0C22
GL_COLOR_WRITEMASK = 0x0C23
GL_INDEX_MODE = 0x0C30
GL_RGBA_MODE = 0x0C31
GL_DOUBLEBUFFER = 0x0C32
GL_STEREO = 0x0C33
GL_RENDER_MODE = 0x0C40
GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50
GL_POINT_SMOOTH_HINT = 0x0C51
GL_LINE_SMOOTH_HINT = 0x0C52
GL_POLYGON_SMOOTH_HINT = 0x0C53
GL_FOG_HINT = 0x0C54
GL_TEXTURE_GEN_S = 0x0C60
GL_TEXTURE_GEN_T = 0x0C61
GL_TEXTURE_GEN_R = 0x0C62
GL_TEXTURE_GEN_Q = 0x0C63
GL_PIXEL_MAP_I_TO_I = 0x0C70
GL_PIXEL_MAP_S_TO_S = 0x0C71
GL_PIXEL_MAP_I_TO_R = 0x0C72
GL_PIXEL_MAP_I_TO_G = 0x0C73
GL_PIXEL_MAP_I_TO_B = 0x0C74
GL_PIXEL_MAP_I_TO_A = 0x0C75
GL_PIXEL_MAP_R_TO_R = 0x0C76
GL_PIXEL_MAP_G_TO_G = 0x0C77
GL_PIXEL_MAP_B_TO_B = 0x0C78
GL_PIXEL_MAP_A_TO_A = 0x0C79
GL_PIXEL_MAP_I_TO_I_SIZE = 0x0CB0
GL_PIXEL_MAP_S_TO_S_SIZE = 0x0CB1
GL_PIXEL_MAP_I_TO_R_SIZE = 0x0CB2
GL_PIXEL_MAP_I_TO_G_SIZE = 0x0CB3
GL_PIXEL_MAP_I_TO_B_SIZE = 0x0CB4
GL_PIXEL_MAP_I_TO_A_SIZE = 0x0CB5
GL_PIXEL_MAP_R_TO_R_SIZE = 0x0CB6
GL_PIXEL_MAP_G_TO_G_SIZE = 0x0CB7
GL_PIXEL_MAP_B_TO_B_SIZE = 0x0CB8
GL_PIXEL_MAP_A_TO_A_SIZE = 0x0CB9
GL_UNPACK_SWAP_BYTES = 0x0CF0
GL_UNPACK_LSB_FIRST = 0x0CF1
GL_UNPACK_ROW_LENGTH = 0x0CF2
GL_UNPACK_SKIP_ROWS = 0x0CF3
GL_UNPACK_SKIP_PIXELS = 0x0CF4
GL_UNPACK_ALIGNMENT = 0x0CF5
GL_PACK_SWAP_BYTES = 0x0D00
GL_PACK_LSB_FIRST = 0x0D01
GL_PACK_ROW_LENGTH = 0x0D02
GL_PACK_SKIP_ROWS = 0x0D03
GL_PACK_SKIP_PIXELS = 0x0D04
GL_PACK_ALIGNMENT = 0x0D05
GL_MAP_COLOR = 0x0D10
GL_MAP_STENCIL = 0x0D11
GL_INDEX_SHIFT = 0x0D12
GL_INDEX_OFFSET = 0x0D13
GL_RED_SCALE = 0x0D14
GL_RED_BIAS = 0x0D15
GL_ZOOM_X = 0x0D16
GL_ZOOM_Y = 0x0D17
GL_GREEN_SCALE = 0x0D18
GL_GREEN_BIAS = 0x0D19
GL_BLUE_SCALE = 0x0D1A
GL_BLUE_BIAS = 0x0D1B
GL_ALPHA_SCALE = 0x0D1C
GL_ALPHA_BIAS = 0x0D1D
GL_DEPTH_SCALE = 0x0D1E
GL_DEPTH_BIAS = 0x0D1F
GL_MAX_EVAL_ORDER = 0x0D30
GL_MAX_LIGHTS = 0x0D31
GL_MAX_CLIP_PLANES = 0x0D32
GL_MAX_TEXTURE_SIZE = 0x0D33
GL_MAX_PIXEL_MAP_TABLE = 0x0D34
GL_MAX_ATTRIB_STACK_DEPTH = 0x0D35
GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36
GL_MAX_NAME_STACK_DEPTH = 0x0D37
GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38
GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39
GL_MAX_VIEWPORT_DIMS = 0x0D3A
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B
GL_SUBPIXEL_BITS = 0x0D50
GL_INDEX_BITS = 0x0D51
GL_RED_BITS = 0x0D52
GL_GREEN_BITS = 0x0D53
GL_BLUE_BITS = 0x0D54
GL_ALPHA_BITS = 0x0D55
GL_DEPTH_BITS = 0x0D56
GL_STENCIL_BITS = 0x0D57
GL_ACCUM_RED_BITS = 0x0D58
GL_ACCUM_GREEN_BITS = 0x0D59
GL_ACCUM_BLUE_BITS = 0x0D5A
GL_ACCUM_ALPHA_BITS = 0x0D5B
GL_NAME_STACK_DEPTH = 0x0D70
GL_AUTO_NORMAL = 0x0D80
GL_MAP1_COLOR_4 = 0x0D90
GL_MAP1_INDEX = 0x0D91
GL_MAP1_NORMAL = 0x0D92
GL_MAP1_TEXTURE_COORD_1 = 0x0D93
GL_MAP1_TEXTURE_COORD_2 = 0x0D94
GL_MAP1_TEXTURE_COORD_3 = 0x0D95
GL_MAP1_TEXTURE_COORD_4 = 0x0D96
GL_MAP1_VERTEX_3 = 0x0D97
GL_MAP1_VERTEX_4 = 0x0D98
GL_MAP2_COLOR_4 = 0x0DB0
GL_MAP2_INDEX = 0x0DB1
GL_MAP2_NORMAL = 0x0DB2
GL_MAP2_TEXTURE_COORD_1 = 0x0DB3
GL_MAP2_TEXTURE_COORD_2 = 0x0DB4
GL_MAP2_TEXTURE_COORD_3 = 0x0DB5
GL_MAP2_TEXTURE_COORD_4 = 0x0DB6
GL_MAP2_VERTEX_3 = 0x0DB7
GL_MAP2_VERTEX_4 = 0x0DB8
GL_MAP1_GRID_DOMAIN = 0x0DD0
GL_MAP1_GRID_SEGMENTS = 0x0DD1
GL_MAP2_GRID_DOMAIN = 0x0DD2
GL_MAP2_GRID_SEGMENTS = 0x0DD3
GL_TEXTURE_1D = 0x0DE0
GL_TEXTURE_2D = 0x0DE1
GL_FEEDBACK_BUFFER_POINTER = 0x0DF0
GL_FEEDBACK_BUFFER_SIZE = 0x0DF1
GL_FEEDBACK_BUFFER_TYPE = 0x0DF2
GL_SELECTION_BUFFER_POINTER = 0x0DF3
GL_SELECTION_BUFFER_SIZE = 0x0DF4

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_TEXTURE_WIDTH = 0x1000
GL_TEXTURE_HEIGHT = 0x1001
GL_TEXTURE_INTERNAL_FORMAT = 0x1003
GL_TEXTURE_BORDER_COLOR = 0x1004
GL_TEXTURE_BORDER = 0x1005

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_DONT_CARE = 0x1100
GL_FASTEST = 0x1101
GL_NICEST = 0x1102

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_LIGHT0 = 0x4000
GL_LIGHT1 = 0x4001
GL_LIGHT2 = 0x4002
GL_LIGHT3 = 0x4003
GL_LIGHT4 = 0x4004
GL_LIGHT5 = 0x4005
GL_LIGHT6 = 0x4006
GL_LIGHT7 = 0x4007

GL_AMBIENT = 0x1200
GL_DIFFUSE = 0x1201
GL_SPECULAR = 0x1202
GL_POSITION = 0x1203
GL_SPOT_DIRECTION = 0x1204
GL_SPOT_EXPONENT = 0x1205
GL_SPOT_CUTOFF = 0x1206
GL_CONSTANT_ATTENUATION = 0x1207
GL_LINEAR_ATTENUATION = 0x1208
GL_QUADRATIC_ATTENUATION = 0x1209

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_COMPILE = 0x1300
GL_COMPILE_AND_EXECUTE = 0x1301

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_CLEAR = 0x1500
GL_AND = 0x1501
GL_AND_REVERSE = 0x1502
GL_COPY = 0x1503
GL_AND_INVERTED = 0x1504
GL_NOOP = 0x1505
GL_XOR = 0x1506
GL_OR = 0x1507
GL_NOR = 0x1508
GL_EQUIV = 0x1509
GL_INVERT = 0x150A
GL_OR_REVERSE = 0x150B
GL_COPY_INVERTED = 0x150C
GL_OR_INVERTED = 0x150D
GL_NAND = 0x150E
GL_SET = 0x150F

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_EMISSION = 0x1600
GL_SHININESS = 0x1601
GL_AMBIENT_AND_DIFFUSE = 0x1602
GL_COLOR_INDEXES = 0x1603

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_MODELVIEW = 0x1700
GL_PROJECTION = 0x1701
GL_TEXTURE = 0x1702

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_COLOR = 0x1800
GL_DEPTH = 0x1801
GL_STENCIL = 0x1802

GL_COLOR_INDEX = 0x1900
GL_STENCIL_INDEX = 0x1901
GL_DEPTH_COMPONENT = 0x1902
GL_RED = 0x1903
GL_GREEN = 0x1904
GL_BLUE = 0x1905
GL_ALPHA = 0x1906
GL_RGB = 0x1907
GL_RGBA = 0x1908
GL_LUMINANCE = 0x1909
GL_LUMINANCE_ALPHA = 0x190A

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_BITMAP = 0x1A00

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_POINT = 0x1B00
GL_LINE = 0x1B01
GL_FILL = 0x1B02

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_RENDER = 0x1C00
GL_FEEDBACK = 0x1C01
GL_SELECT = 0x1C02

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_FLAT = 0x1D00
GL_SMOOTH = 0x1D01

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_KEEP = 0x1E00
GL_REPLACE = 0x1E01
GL_INCR = 0x1E02
GL_DECR = 0x1E03

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_VENDOR = 0x1F00
GL_RENDERER = 0x1F01
GL_VERSION = 0x1F02
GL_EXTENSIONS = 0x1F03

GL_S = 0x2000
GL_T = 0x2001
GL_R = 0x2002
GL_Q = 0x2003

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_MODULATE = 0x2100
GL_DECAL = 0x2101

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_TEXTURE_ENV_MODE = 0x2200
GL_TEXTURE_ENV_COLOR = 0x2201

GL_TEXTURE_ENV = 0x2300

GL_EYE_LINEAR = 0x2400
GL_OBJECT_LINEAR = 0x2401
GL_SPHERE_MAP = 0x2402

GL_TEXTURE_GEN_MODE = 0x2500
GL_OBJECT_PLANE = 0x2501
GL_EYE_PLANE = 0x2502

GL_NEAREST = 0x2600
GL_LINEAR = 0x2601

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_NEAREST_MIPMAP_NEAREST = 0x2700
GL_LINEAR_MIPMAP_NEAREST = 0x2701
GL_NEAREST_MIPMAP_LINEAR = 0x2702
GL_LINEAR_MIPMAP_LINEAR = 0x2703

GL_TEXTURE_MAG_FILTER = 0x2800
GL_TEXTURE_MIN_FILTER = 0x2801
GL_TEXTURE_WRAP_S = 0x2802
GL_TEXTURE_WRAP_T = 0x2803

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_CLAMP = 0x2900
GL_REPEAT = 0x2901

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GL_CLIENT_PIXEL_STORE_BIT = 0x00000001
GL_CLIENT_VERTEX_ARRAY_BIT = 0x00000002
GL_CLIENT_ALL_ATTRIB_BITS = 0xffffffff

GL_POLYGON_OFFSET_FACTOR = 0x8038
GL_POLYGON_OFFSET_UNITS = 0x2A00
GL_POLYGON_OFFSET_POINT = 0x2A01
GL_POLYGON_OFFSET_LINE = 0x2A02
GL_POLYGON_OFFSET_FILL = 0x8037

GL_ALPHA4 = 0x803B
GL_ALPHA8 = 0x803C
GL_ALPHA12 = 0x803D
GL_ALPHA16 = 0x803E
GL_LUMINANCE4 = 0x803F
GL_LUMINANCE8 = 0x8040
GL_LUMINANCE12 = 0x8041
GL_LUMINANCE16 = 0x8042
GL_LUMINANCE4_ALPHA4 = 0x8043
GL_LUMINANCE6_ALPHA2 = 0x8044
GL_LUMINANCE8_ALPHA8 = 0x8045
GL_LUMINANCE12_ALPHA4 = 0x8046
GL_LUMINANCE12_ALPHA12 = 0x8047
GL_LUMINANCE16_ALPHA16 = 0x8048
GL_INTENSITY = 0x8049
GL_INTENSITY4 = 0x804A
GL_INTENSITY8 = 0x804B
GL_INTENSITY12 = 0x804C
GL_INTENSITY16 = 0x804D
GL_R3_G3_B2 = 0x2A10
GL_RGB4 = 0x804F
GL_RGB5 = 0x8050
GL_RGB8 = 0x8051
GL_RGB10 = 0x8052
GL_RGB12 = 0x8053
GL_RGB16 = 0x8054
GL_RGBA2 = 0x8055
GL_RGBA4 = 0x8056
GL_RGB5_A1 = 0x8057
GL_RGBA8 = 0x8058
GL_RGB10_A2 = 0x8059
GL_RGBA12 = 0x805A
GL_RGBA16 = 0x805B
GL_TEXTURE_RED_SIZE = 0x805C
GL_TEXTURE_GREEN_SIZE = 0x805D
GL_TEXTURE_BLUE_SIZE = 0x805E
GL_TEXTURE_ALPHA_SIZE = 0x805F
GL_TEXTURE_LUMINANCE_SIZE = 0x8060
GL_TEXTURE_INTENSITY_SIZE = 0x8061
GL_PROXY_TEXTURE_1D = 0x8063
GL_PROXY_TEXTURE_2D = 0x8064

GL_TEXTURE_PRIORITY = 0x8066
GL_TEXTURE_RESIDENT = 0x8067
GL_TEXTURE_BINDING_1D = 0x8068
GL_TEXTURE_BINDING_2D = 0x8069
GL_TEXTURE_BINDING_3D = 0x806A

GL_VERTEX_ARRAY = 0x8074
GL_NORMAL_ARRAY = 0x8075
GL_COLOR_ARRAY = 0x8076
GL_INDEX_ARRAY = 0x8077
GL_TEXTURE_COORD_ARRAY = 0x8078
GL_EDGE_FLAG_ARRAY = 0x8079
GL_VERTEX_ARRAY_SIZE = 0x807A
GL_VERTEX_ARRAY_TYPE = 0x807B
GL_VERTEX_ARRAY_STRIDE = 0x807C
GL_NORMAL_ARRAY_TYPE = 0x807E
GL_NORMAL_ARRAY_STRIDE = 0x807F
GL_COLOR_ARRAY_SIZE = 0x8081
GL_COLOR_ARRAY_TYPE = 0x8082
GL_COLOR_ARRAY_STRIDE = 0x8083
GL_INDEX_ARRAY_TYPE = 0x8085
GL_INDEX_ARRAY_STRIDE = 0x8086
GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088
GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089
GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A
GL_EDGE_FLAG_ARRAY_STRIDE = 0x808C
GL_VERTEX_ARRAY_POINTER = 0x808E
GL_NORMAL_ARRAY_POINTER = 0x808F
GL_COLOR_ARRAY_POINTER = 0x8090
GL_INDEX_ARRAY_POINTER = 0x8091
GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092
GL_EDGE_FLAG_ARRAY_POINTER = 0x8093
GL_V2F = 0x2A20
GL_V3F = 0x2A21
GL_C4UB_V2F = 0x2A22
GL_C4UB_V3F = 0x2A23
GL_C3F_V3F = 0x2A24
GL_N3F_V3F = 0x2A25
GL_C4F_N3F_V3F = 0x2A26
GL_T2F_V3F = 0x2A27
GL_T4F_V4F = 0x2A28
GL_T2F_C4UB_V3F = 0x2A29
GL_T2F_C3F_V3F = 0x2A2A
GL_T2F_N3F_V3F = 0x2A2B
GL_T2F_C4F_N3F_V3F = 0x2A2C
GL_T4F_C4F_N3F_V4F = 0x2A2D

GL_BGR = 0x80E0
GL_BGRA = 0x80E1

GL_CONSTANT_COLOR = 0x8001
GL_ONE_MINUS_CONSTANT_COLOR = 0x8002
GL_CONSTANT_ALPHA = 0x8003
GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004
GL_BLEND_COLOR = 0x8005

GL_FUNC_ADD = 0x8006
GL_MIN = 0x8007
GL_MAX = 0x8008
GL_BLEND_EQUATION = 0x8009

GL_FUNC_SUBTRACT = 0x800A
GL_FUNC_REVERSE_SUBTRACT = 0x800B

GL_COLOR_MATRIX = 0x80B1
GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2
GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3
GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4
GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5
GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6
GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7
GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8
GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9
GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA
GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB

GL_COLOR_TABLE = 0x80D0
GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1
GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2
GL_PROXY_COLOR_TABLE = 0x80D3
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5
GL_COLOR_TABLE_SCALE = 0x80D6
GL_COLOR_TABLE_BIAS = 0x80D7
GL_COLOR_TABLE_FORMAT = 0x80D8
GL_COLOR_TABLE_WIDTH = 0x80D9
GL_COLOR_TABLE_RED_SIZE = 0x80DA
GL_COLOR_TABLE_GREEN_SIZE = 0x80DB
GL_COLOR_TABLE_BLUE_SIZE = 0x80DC
GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD
GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE
GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF

GL_CONVOLUTION_1D = 0x8010
GL_CONVOLUTION_2D = 0x8011
GL_SEPARABLE_2D = 0x8012
GL_CONVOLUTION_BORDER_MODE = 0x8013
GL_CONVOLUTION_FILTER_SCALE = 0x8014
GL_CONVOLUTION_FILTER_BIAS = 0x8015
GL_REDUCE = 0x8016
GL_CONVOLUTION_FORMAT = 0x8017
GL_CONVOLUTION_WIDTH = 0x8018
GL_CONVOLUTION_HEIGHT = 0x8019
GL_MAX_CONVOLUTION_WIDTH = 0x801A
GL_MAX_CONVOLUTION_HEIGHT = 0x801B
GL_POST_CONVOLUTION_RED_SCALE = 0x801C
GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D
GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E
GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F
GL_POST_CONVOLUTION_RED_BIAS = 0x8020
GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021
GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022
GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023
GL_CONSTANT_BORDER = 0x8151
GL_REPLICATE_BORDER = 0x8153
GL_CONVOLUTION_BORDER_COLOR = 0x8154

GL_MAX_ELEMENTS_VERTICES = 0x80E8
GL_MAX_ELEMENTS_INDICES = 0x80E9

GL_HISTOGRAM = 0x8024
GL_PROXY_HISTOGRAM = 0x8025
GL_HISTOGRAM_WIDTH = 0x8026
GL_HISTOGRAM_FORMAT = 0x8027
GL_HISTOGRAM_RED_SIZE = 0x8028
GL_HISTOGRAM_GREEN_SIZE = 0x8029
GL_HISTOGRAM_BLUE_SIZE = 0x802A
GL_HISTOGRAM_ALPHA_SIZE = 0x802B
GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C
GL_HISTOGRAM_SINK = 0x802D
GL_MINMAX = 0x802E
GL_MINMAX_FORMAT = 0x802F
GL_MINMAX_SINK = 0x8030
GL_TABLE_TOO_LARGE = 0x8031

GL_UNSIGNED_BYTE_3_3_2 = 0x8032
GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033
GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034
GL_UNSIGNED_INT_8_8_8_8 = 0x8035
GL_UNSIGNED_INT_10_10_10_2 = 0x8036
GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362
GL_UNSIGNED_SHORT_5_6_5 = 0x8363
GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364
GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365
GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366
GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367
GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368

GL_RESCALE_NORMAL = 0x803A

GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8
GL_SINGLE_COLOR = 0x81F9
GL_SEPARATE_SPECULAR_COLOR = 0x81FA

GL_PACK_SKIP_IMAGES = 0x806B
GL_PACK_IMAGE_HEIGHT = 0x806C
GL_UNPACK_SKIP_IMAGES = 0x806D
GL_UNPACK_IMAGE_HEIGHT = 0x806E
GL_TEXTURE_3D = 0x806F
GL_PROXY_TEXTURE_3D = 0x8070
GL_TEXTURE_DEPTH = 0x8071
GL_TEXTURE_WRAP_R = 0x8072
GL_MAX_3D_TEXTURE_SIZE = 0x8073

GL_CLAMP_TO_EDGE = 0x812F
GL_CLAMP_TO_BORDER = 0x812D

GL_TEXTURE_MIN_LOD = 0x813A
GL_TEXTURE_MAX_LOD = 0x813B
GL_TEXTURE_BASE_LEVEL = 0x813C
GL_TEXTURE_MAX_LEVEL = 0x813D

GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12
GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13
GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22
GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23
GL_ALIASED_POINT_SIZE_RANGE = 0x846D
GL_ALIASED_LINE_WIDTH_RANGE = 0x846E

GL_TEXTURE0 = 0x84C0
GL_TEXTURE1 = 0x84C1
GL_TEXTURE2 = 0x84C2
GL_TEXTURE3 = 0x84C3
GL_TEXTURE4 = 0x84C4
GL_TEXTURE5 = 0x84C5
GL_TEXTURE6 = 0x84C6
GL_TEXTURE7 = 0x84C7
GL_TEXTURE8 = 0x84C8
GL_TEXTURE9 = 0x84C9
GL_TEXTURE10 = 0x84CA
GL_TEXTURE11 = 0x84CB
GL_TEXTURE12 = 0x84CC
GL_TEXTURE13 = 0x84CD
GL_TEXTURE14 = 0x84CE
GL_TEXTURE15 = 0x84CF
GL_TEXTURE16 = 0x84D0
GL_TEXTURE17 = 0x84D1
GL_TEXTURE18 = 0x84D2
GL_TEXTURE19 = 0x84D3
GL_TEXTURE20 = 0x84D4
GL_TEXTURE21 = 0x84D5
GL_TEXTURE22 = 0x84D6
GL_TEXTURE23 = 0x84D7
GL_TEXTURE24 = 0x84D8
GL_TEXTURE25 = 0x84D9
GL_TEXTURE26 = 0x84DA
GL_TEXTURE27 = 0x84DB
GL_TEXTURE28 = 0x84DC
GL_TEXTURE29 = 0x84DD
GL_TEXTURE30 = 0x84DE
GL_TEXTURE31 = 0x84DF
GL_ACTIVE_TEXTURE = 0x84E0
GL_CLIENT_ACTIVE_TEXTURE = 0x84E1
GL_MAX_TEXTURE_UNITS = 0x84E2

GL_COMBINE = 0x8570
GL_COMBINE_RGB = 0x8571
GL_COMBINE_ALPHA = 0x8572
GL_RGB_SCALE = 0x8573
GL_ADD_SIGNED = 0x8574
GL_INTERPOLATE = 0x8575
GL_CONSTANT = 0x8576
GL_PRIMARY_COLOR = 0x8577
GL_PREVIOUS = 0x8578
GL_SUBTRACT = 0x84E7

GL_SRC0_RGB = 0x8580
GL_SRC1_RGB = 0x8581
GL_SRC2_RGB = 0x8582
GL_SRC3_RGB = 0x8583
GL_SRC4_RGB = 0x8584
GL_SRC5_RGB = 0x8585
GL_SRC6_RGB = 0x8586
GL_SRC7_RGB = 0x8587
GL_SRC0_ALPHA = 0x8588
GL_SRC1_ALPHA = 0x8589
GL_SRC2_ALPHA = 0x858A
GL_SRC3_ALPHA = 0x858B
GL_SRC4_ALPHA = 0x858C
GL_SRC5_ALPHA = 0x858D
GL_SRC6_ALPHA = 0x858E
GL_SRC7_ALPHA = 0x858F

GL_SOURCE0_RGB = 0x8580
GL_SOURCE1_RGB = 0x8581
GL_SOURCE2_RGB = 0x8582
GL_SOURCE3_RGB = 0x8583
GL_SOURCE4_RGB = 0x8584
GL_SOURCE5_RGB = 0x8585
GL_SOURCE6_RGB = 0x8586
GL_SOURCE7_RGB = 0x8587
GL_SOURCE0_ALPHA = 0x8588
GL_SOURCE1_ALPHA = 0x8589
GL_SOURCE2_ALPHA = 0x858A
GL_SOURCE3_ALPHA = 0x858B
GL_SOURCE4_ALPHA = 0x858C
GL_SOURCE5_ALPHA = 0x858D
GL_SOURCE6_ALPHA = 0x858E
GL_SOURCE7_ALPHA = 0x858F

GL_OPERAND0_RGB = 0x8590
GL_OPERAND1_RGB = 0x8591
GL_OPERAND2_RGB = 0x8592
GL_OPERAND3_RGB = 0x8593
GL_OPERAND4_RGB = 0x8594
GL_OPERAND5_RGB = 0x8595
GL_OPERAND6_RGB = 0x8596
GL_OPERAND7_RGB = 0x8597
GL_OPERAND0_ALPHA = 0x8598
GL_OPERAND1_ALPHA = 0x8599
GL_OPERAND2_ALPHA = 0x859A
GL_OPERAND3_ALPHA = 0x859B
GL_OPERAND4_ALPHA = 0x859C
GL_OPERAND5_ALPHA = 0x859D
GL_OPERAND6_ALPHA = 0x859E
GL_OPERAND7_ALPHA = 0x859F

GL_DOT3_RGB = 0x86AE
GL_DOT3_RGBA = 0x86AF

GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3
GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4
GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5
GL_TRANSPOSE_COLOR_MATRIX = 0x84E6

GL_NORMAL_MAP = 0x8511
GL_REFLECTION_MAP = 0x8512
GL_TEXTURE_CUBE_MAP = 0x8513
GL_TEXTURE_BINDING_CUBE_MAP = 0x8514
GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515
GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516
GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518
GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A
GL_PROXY_TEXTURE_CUBE_MAP = 0x851B
GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C

GL_COMPRESSED_ALPHA = 0x84E9
GL_COMPRESSED_LUMINANCE = 0x84EA
GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB
GL_COMPRESSED_INTENSITY = 0x84EC
GL_COMPRESSED_RGB = 0x84ED
GL_COMPRESSED_RGBA = 0x84EE
GL_TEXTURE_COMPRESSION_HINT = 0x84EF
GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0
GL_TEXTURE_COMPRESSED = 0x86A1
GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2
GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3

GL_MULTISAMPLE = 0x809D
GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E
GL_SAMPLE_ALPHA_TO_ONE = 0x809F
GL_SAMPLE_COVERAGE = 0x80A0
GL_SAMPLE_BUFFERS = 0x80A8
GL_SAMPLES = 0x80A9
GL_SAMPLE_COVERAGE_VALUE = 0x80AA
GL_SAMPLE_COVERAGE_INVERT = 0x80AB
GL_MULTISAMPLE_BIT = 0x20000000

GL_DEPTH_COMPONENT16 = 0x81A5
GL_DEPTH_COMPONENT24 = 0x81A6
GL_DEPTH_COMPONENT32 = 0x81A7
GL_TEXTURE_DEPTH_SIZE = 0x884A
GL_DEPTH_TEXTURE_MODE = 0x884B

GL_TEXTURE_COMPARE_MODE = 0x884C
GL_TEXTURE_COMPARE_FUNC = 0x884D
GL_COMPARE_R_TO_TEXTURE = 0x884E

GL_QUERY_COUNTER_BITS = 0x8864
GL_CURRENT_QUERY = 0x8865
GL_QUERY_RESULT = 0x8866
GL_QUERY_RESULT_AVAILABLE = 0x8867
GL_SAMPLES_PASSED = 0x8914

GL_FOG_COORD_SRC = 0x8450
GL_FOG_COORD = 0x8451
GL_FRAGMENT_DEPTH = 0x8452
GL_CURRENT_FOG_COORD = 0x8453
GL_FOG_COORD_ARRAY_TYPE = 0x8454
GL_FOG_COORD_ARRAY_STRIDE = 0x8455
GL_FOG_COORD_ARRAY_POINTER = 0x8456
GL_FOG_COORD_ARRAY = 0x8457

GL_FOG_COORDINATE_SOURCE = 0x8450
GL_FOG_COORDINATE = 0x8451
GL_CURRENT_FOG_COORDINATE = 0x8453
GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454
GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455
GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456
GL_FOG_COORDINATE_ARRAY = 0x8457

GL_COLOR_SUM = 0x8458
GL_CURRENT_SECONDARY_COLOR = 0x8459
GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A
GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B
GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C
GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D
GL_SECONDARY_COLOR_ARRAY = 0x845E

GL_POINT_SIZE_MIN = 0x8126
GL_POINT_SIZE_MAX = 0x8127
GL_POINT_FADE_THRESHOLD_SIZE = 0x8128
GL_POINT_DISTANCE_ATTENUATION = 0x8129

GL_BLEND_DST_RGB = 0x80C8
GL_BLEND_SRC_RGB = 0x80C9
GL_BLEND_DST_ALPHA = 0x80CA
GL_BLEND_SRC_ALPHA = 0x80CB

GL_GENERATE_MIPMAP = 0x8191
GL_GENERATE_MIPMAP_HINT = 0x8192

GL_INCR_WRAP = 0x8507
GL_DECR_WRAP = 0x8508

GL_MIRRORED_REPEAT = 0x8370

GL_MAX_TEXTURE_LOD_BIAS = 0x84FD
GL_TEXTURE_FILTER_CONTROL = 0x8500
GL_TEXTURE_LOD_BIAS = 0x8501

GL_ARRAY_BUFFER = 0x8892
GL_ELEMENT_ARRAY_BUFFER = 0x8893
GL_ARRAY_BUFFER_BINDING = 0x8894
GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895
GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896
GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897
GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898
GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C
GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D
GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F
GL_STREAM_DRAW = 0x88E0
GL_STREAM_READ = 0x88E1
GL_STREAM_COPY = 0x88E2
GL_STATIC_DRAW = 0x88E4
GL_STATIC_READ = 0x88E5
GL_STATIC_COPY = 0x88E6
GL_DYNAMIC_DRAW = 0x88E8
GL_DYNAMIC_READ = 0x88E9
GL_DYNAMIC_COPY = 0x88EA
GL_READ_ONLY = 0x88B8
GL_WRITE_ONLY = 0x88B9
GL_READ_WRITE = 0x88BA
GL_BUFFER_SIZE = 0x8764
GL_BUFFER_USAGE = 0x8765
GL_BUFFER_ACCESS = 0x88BB
GL_BUFFER_MAPPED = 0x88BC
GL_BUFFER_MAP_POINTER = 0x88BD

GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D

GL_CURRENT_PROGRAM = 0x8B8D
GL_SHADER_TYPE = 0x8B4E
GL_DELETE_STATUS = 0x8B80
GL_COMPILE_STATUS = 0x8B81
GL_LINK_STATUS = 0x8B82
GL_VALIDATE_STATUS = 0x8B83
GL_INFO_LOG_LENGTH = 0x8B84
GL_ATTACHED_SHADERS = 0x8B85
GL_ACTIVE_UNIFORMS = 0x8B86
GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87
GL_SHADER_SOURCE_LENGTH = 0x8B88
GL_FLOAT_VEC2 = 0x8B50
GL_FLOAT_VEC3 = 0x8B51
GL_FLOAT_VEC4 = 0x8B52
GL_INT_VEC2 = 0x8B53
GL_INT_VEC3 = 0x8B54
GL_INT_VEC4 = 0x8B55
GL_BOOL = 0x8B56
GL_BOOL_VEC2 = 0x8B57
GL_BOOL_VEC3 = 0x8B58
GL_BOOL_VEC4 = 0x8B59
GL_FLOAT_MAT2 = 0x8B5A
GL_FLOAT_MAT3 = 0x8B5B
GL_FLOAT_MAT4 = 0x8B5C
GL_SAMPLER_1D = 0x8B5D
GL_SAMPLER_2D = 0x8B5E
GL_SAMPLER_3D = 0x8B5F
GL_SAMPLER_CUBE = 0x8B60
GL_SAMPLER_1D_SHADOW = 0x8B61
GL_SAMPLER_2D_SHADOW = 0x8B62
GL_SHADING_LANGUAGE_VERSION = 0x8B8C
GL_VERTEX_SHADER = 0x8B31
GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A
GL_MAX_VARYING_FLOATS = 0x8B4B
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D
GL_ACTIVE_ATTRIBUTES = 0x8B89
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A
GL_FRAGMENT_SHADER = 0x8B30
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49
GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B
GL_MAX_VERTEX_ATTRIBS = 0x8869
GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622
GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623
GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624
GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A
GL_CURRENT_VERTEX_ATTRIB = 0x8626
GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645
GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642
GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643
GL_MAX_TEXTURE_COORDS = 0x8871
GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872
GL_MAX_DRAW_BUFFERS = 0x8824
GL_DRAW_BUFFER0 = 0x8825
GL_DRAW_BUFFER1 = 0x8826
GL_DRAW_BUFFER2 = 0x8827
GL_DRAW_BUFFER3 = 0x8828
GL_DRAW_BUFFER4 = 0x8829
GL_DRAW_BUFFER5 = 0x882A
GL_DRAW_BUFFER6 = 0x882B
GL_DRAW_BUFFER7 = 0x882C
GL_DRAW_BUFFER8 = 0x882D
GL_DRAW_BUFFER9 = 0x882E
GL_DRAW_BUFFER10 = 0x882F
GL_DRAW_BUFFER11 = 0x8830
GL_DRAW_BUFFER12 = 0x8831
GL_DRAW_BUFFER13 = 0x8832
GL_DRAW_BUFFER14 = 0x8833
GL_DRAW_BUFFER15 = 0x8834
GL_POINT_SPRITE = 0x8861
GL_COORD_REPLACE = 0x8862
GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0
GL_LOWER_LEFT = 0x8CA1
GL_UPPER_LEFT = 0x8CA2
GL_STENCIL_BACK_FUNC = 0x8800
GL_STENCIL_BACK_VALUE_MASK = 0x8CA4
GL_STENCIL_BACK_REF = 0x8CA3
GL_STENCIL_BACK_FAIL = 0x8801
GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802
GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803
GL_STENCIL_BACK_WRITEMASK = 0x8CA5

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

@bind(None, [GLenum, GLfloat])
def glAccum(op, value): pass

@bind(None, [GLenum, GLclampf])
def glAlphaFunc(func, ref): pass

@bind(GLboolean, [GLsizei, POINTER(GLuint), POINTER(GLboolean)])
def glAreTexturesResident(n, textures, residences): pass

@bind(None, [GLint])
def glArrayElement(i): pass

@bind(None, [GLenum])
def glBegin(mode): pass

@bind(None, [GLenum, GLuint])
def glBindTexture(target, texture): pass

@bind(None, [GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, POINTER(GLubyte)])
def glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap): pass

@bind(None, [GLclampf, GLclampf, GLclampf, GLclampf])
def glBlendColor(red, green, blue, alpha): pass

@bind(None, [GLenum])
def glBlendEquation(mode): pass

@bind(None, [GLenum, GLenum])
def glBlendFunc(sfactor, dfactor): pass

@bind(None, [GLuint])
def glCallList(list): pass

@bind(None, [GLsizei, GLenum, POINTER(GLvoid)])
def glCallLists(n, type, lists): pass

@bind(None, [GLbitfield])
def glClear(mask): pass

@bind(None, [GLfloat, GLfloat, GLfloat, GLfloat])
def glClearAccum(red, green, blue, alpha): pass

@bind(None, [GLclampf, GLclampf, GLclampf, GLclampf])
def glClearColor(red, green, blue, alpha): pass

@bind(None, [GLclampd])
def glClearDepth(depth): pass

@bind(None, [GLfloat])
def glClearIndex(c): pass

@bind(None, [GLint])
def glClearStencil(s): pass

@bind(None, [GLenum, POINTER(GLdouble)])
def glClipPlane(plane, equation): pass

@bind(None, [GLbyte, GLbyte, GLbyte])
def glColor3b(red, green, blue): pass

@bind(None, [POINTER(GLbyte)])
def glColor3bv(v): pass

@bind(None, [GLdouble, GLdouble, GLdouble])
def glColor3d(red, green, blue): pass

@bind(None, [POINTER(GLdouble)])
def glColor3dv(v): pass

@bind(None, [GLfloat, GLfloat, GLfloat])
def glColor3f(red, green, blue): pass

@bind(None, [POINTER(GLfloat)])
def glColor3fv(v): pass

@bind(None, [GLint, GLint, GLint])
def glColor3i(red, green, blue): pass

@bind(None, [POINTER(GLint)])
def glColor3iv(v): pass

@bind(None, [GLshort, GLshort, GLshort])
def glColor3s(red, green, blue): pass

@bind(None, [POINTER(GLshort)])
def glColor3sv(v): pass

@bind(None, [GLubyte, GLubyte, GLubyte])
def glColor3ub(red, green, blue): pass

@bind(None, [POINTER(GLubyte)])
def glColor3ubv(v): pass

@bind(None, [GLuint, GLuint, GLuint])
def glColor3ui(red, green, blue): pass

@bind(None, [POINTER(GLuint)])
def glColor3uiv(v): pass

@bind(None, [GLushort, GLushort, GLushort])
def glColor3us(red, green, blue): pass

@bind(None, [POINTER(GLushort)])
def glColor3usv(v): pass

@bind(None, [GLbyte, GLbyte, GLbyte, GLbyte])
def glColor4b(red, green, blue, alpha): pass

@bind(None, [POINTER(GLbyte)])
def glColor4bv(v): pass

@bind(None, [GLdouble, GLdouble, GLdouble, GLdouble])
def glColor4d(red, green, blue, alpha): pass

@bind(None, [POINTER(GLdouble)])
def glColor4dv(v): pass

@bind(None, [GLfloat, GLfloat, GLfloat, GLfloat])
def glColor4f(red, green, blue, alpha): pass

@bind(None, [POINTER(GLfloat)])
def glColor4fv(v): pass

@bind(None, [GLint, GLint, GLint, GLint])
def glColor4i(red, green, blue, alpha): pass

@bind(None, [POINTER(GLint)])
def glColor4iv(v): pass

@bind(None, [GLshort, GLshort, GLshort, GLshort])
def glColor4s(red, green, blue, alpha): pass

@bind(None, [POINTER(GLshort)])
def glColor4sv(v): pass

@bind(None, [GLubyte, GLubyte, GLubyte, GLubyte])
def glColor4ub(red, green, blue, alpha): pass

@bind(None, [POINTER(GLubyte)])
def glColor4ubv(v): pass

@bind(None, [GLuint, GLuint, GLuint, GLuint])
def glColor4ui(red, green, blue, alpha): pass

@bind(None, [POINTER(GLuint)])
def glColor4uiv(v): pass

@bind(None, [GLushort, GLushort, GLushort, GLushort])
def glColor4us(red, green, blue, alpha): pass

@bind(None, [POINTER(GLushort)])
def glColor4usv(v): pass

@bind(None, [GLboolean, GLboolean, GLboolean, GLboolean])
def glColorMask(red, green, blue, alpha): pass

@bind(None, [GLenum, GLenum])
def glColorMaterial(face, mode): pass

@bind(None, [GLint, GLenum, GLsizei, POINTER(GLvoid)])
def glColorPointer(size, type, stride, pointer): pass

@bind(None, [GLenum, GLsizei, GLsizei, GLenum, GLenum, POINTER(GLvoid)])
def glColorSubTable(target, start, count, format, type, data): pass

@bind(None, [GLenum, GLenum, GLsizei, GLenum, GLenum, POINTER(GLvoid)])
def glColorTable(target, internalformat, width, format, type, table): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glColorTableParameterfv(target, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glColorTableParameteriv(target, pname, params): pass

@bind(None, [GLenum, GLenum, GLsizei, GLenum, GLenum, POINTER(GLvoid)])
def glConvolutionFilter1D(target, internalformat, width, format, type, image): pass

@bind(None, [GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, POINTER(GLvoid)])
def glConvolutionFilter2D(target, internalformat, width, height, format, type, image): pass

@bind(None, [GLenum, GLenum, GLfloat])
def glConvolutionParameterf(target, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glConvolutionParameterfv(target, pname, params): pass

@bind(None, [GLenum, GLenum, GLint])
def glConvolutionParameteri(target, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glConvolutionParameteriv(target, pname, params): pass

@bind(None, [GLenum, GLsizei, GLint, GLint, GLsizei])
def glCopyColorSubTable(target, start, x, y, width): pass

@bind(None, [GLenum, GLenum, GLint, GLint, GLsizei])
def glCopyColorTable(target, internalformat, x, y, width): pass

@bind(None, [GLenum, GLenum, GLint, GLint, GLsizei])
def glCopyConvolutionFilter1D(target, internalformat, x, y, width): pass

@bind(None, [GLenum, GLenum, GLint, GLint, GLsizei, GLsizei])
def glCopyConvolutionFilter2D(target, internalformat, x, y, width, height): pass

@bind(None, [GLint, GLint, GLsizei, GLsizei, GLenum])
def glCopyPixels(x, y, width, height, type): pass

@bind(None, [GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint])
def glCopyTexImage1D(target, level, internalformat, x, y, width, border): pass

@bind(None, [GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint])
def glCopyTexImage2D(target, level, internalformat, x, y, width, height, border): pass

@bind(None, [GLenum, GLint, GLint, GLint, GLint, GLsizei])
def glCopyTexSubImage1D(target, level, xoffset, x, y, width): pass

@bind(None, [GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei])
def glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height): pass

@bind(None, [GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei])
def glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height): pass

@bind(None, [GLenum])
def glCullFace(mode): pass

@bind(None, [GLuint, GLsizei])
def glDeleteLists(list, range): pass

@bind(None, [GLsizei, POINTER(GLuint)])
def glDeleteTextures(n, textures): pass

@bind(None, [GLenum])
def glDepthFunc(func): pass

@bind(None, [GLboolean])
def glDepthMask(flag): pass

@bind(None, [GLclampd, GLclampd])
def glDepthRange(zNear, zFar): pass

@bind(None, [GLenum])
def glDisable(cap): pass

@bind(None, [GLenum])
def glDisableClientState(array): pass

@bind(None, [GLenum, GLint, GLsizei])
def glDrawArrays(mode, first, count): pass

@bind(None, [GLenum])
def glDrawBuffer(mode): pass

@bind(None, [GLenum, GLsizei, GLenum, POINTER(GLvoid)])
def glDrawElements(mode, count, type, indices): pass

@bind(None, [GLsizei, GLsizei, GLenum, GLenum, POINTER(GLvoid)])
def glDrawPixels(width, height, format, type, pixels): pass

@bind(None, [GLenum, GLuint, GLuint, GLsizei, GLenum, POINTER(GLvoid)])
def glDrawRangeElements(mode, start, end, count, type, indices): pass

@bind(None, [GLboolean])
def glEdgeFlag(flag): pass

@bind(None, [GLsizei, POINTER(GLvoid)])
def glEdgeFlagPointer(stride, pointer): pass

@bind(None, [POINTER(GLboolean)])
def glEdgeFlagv(flag): pass

@bind(None, [GLenum])
def glEnable(cap): pass

@bind(None, [GLenum])
def glEnableClientState(array): pass

@bind(None, [])
def glEnd(): pass

@bind(None, [])
def glEndList(): pass

@bind(None, [GLdouble])
def glEvalCoord1d(u): pass

@bind(None, [POINTER(GLdouble)])
def glEvalCoord1dv(u): pass

@bind(None, [GLfloat])
def glEvalCoord1f(u): pass

@bind(None, [POINTER(GLfloat)])
def glEvalCoord1fv(u): pass

@bind(None, [GLdouble, GLdouble])
def glEvalCoord2d(u, v): pass

@bind(None, [POINTER(GLdouble)])
def glEvalCoord2dv(u): pass

@bind(None, [GLfloat, GLfloat])
def glEvalCoord2f(u, v): pass

@bind(None, [POINTER(GLfloat)])
def glEvalCoord2fv(u): pass

@bind(None, [GLenum, GLint, GLint])
def glEvalMesh1(mode, i1, i2): pass

@bind(None, [GLenum, GLint, GLint, GLint, GLint])
def glEvalMesh2(mode, i1, i2, j1, j2): pass

@bind(None, [GLint])
def glEvalPoint1(i): pass

@bind(None, [GLint, GLint])
def glEvalPoint2(i, j): pass

@bind(None, [GLsizei, GLenum, POINTER(GLfloat)])
def glFeedbackBuffer(size, type, buffer): pass

@bind(None, [])
def glFinish(): pass

@bind(None, [])
def glFlush(): pass

@bind(None, [GLenum, GLfloat])
def glFogf(pname, param): pass

@bind(None, [GLenum, POINTER(GLfloat)])
def glFogfv(pname, params): pass

@bind(None, [GLenum, GLint])
def glFogi(pname, param): pass

@bind(None, [GLenum, POINTER(GLint)])
def glFogiv(pname, params): pass

@bind(None, [GLenum])
def glFrontFace(mode): pass

@bind(None, [GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble])
def glFrustum(left, right, bottom, top, zNear, zFar): pass

@bind(GLuint, [GLsizei])
def glGenLists(range): pass

@bind(None, [GLsizei, POINTER(GLuint)])
def glGenTextures(n, textures): pass

@bind(None, [GLenum, POINTER(GLboolean)])
def glGetBooleanv(pname, params): pass

@bind(None, [GLenum, POINTER(GLdouble)])
def glGetClipPlane(plane, equation): pass

@bind(None, [GLenum, GLenum, GLenum, POINTER(GLvoid)])
def glGetColorTable(target, format, type, table): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glGetColorTableParameterfv(target, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glGetColorTableParameteriv(target, pname, params): pass

@bind(None, [GLenum, GLenum, GLenum, POINTER(GLvoid)])
def glGetConvolutionFilter(target, format, type, image): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glGetConvolutionParameterfv(target, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glGetConvolutionParameteriv(target, pname, params): pass

@bind(None, [GLenum, POINTER(GLdouble)])
def glGetDoublev(pname, params): pass

@bind(GLenum, [])
def glGetError(): pass

@bind(None, [GLenum, POINTER(GLfloat)])
def glGetFloatv(pname, params): pass

@bind(None, [GLenum, GLboolean, GLenum, GLenum, POINTER(GLvoid)])
def glGetHistogram(target, reset, format, type, values): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glGetHistogramParameterfv(target, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glGetHistogramParameteriv(target, pname, params): pass

@bind(None, [GLenum, POINTER(GLint)])
def glGetIntegerv(pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glGetLightfv(light, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glGetLightiv(light, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLdouble)])
def glGetMapdv(target, query, v): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glGetMapfv(target, query, v): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glGetMapiv(target, query, v): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glGetMaterialfv(face, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glGetMaterialiv(face, pname, params): pass

@bind(None, [GLenum, GLboolean, GLenum, GLenum, POINTER(GLvoid)])
def glGetMinmax(target, reset, format, type, values): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glGetMinmaxParameterfv(target, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glGetMinmaxParameteriv(target, pname, params): pass

@bind(None, [GLenum, POINTER(GLfloat)])
def glGetPixelMapfv(map, values): pass

@bind(None, [GLenum, POINTER(GLuint)])
def glGetPixelMapuiv(map, values): pass

@bind(None, [GLenum, POINTER(GLushort)])
def glGetPixelMapusv(map, values): pass

@bind(None, [GLenum, POINTER(POINTER(GLvoid))])
def glGetPointerv(pname, params): pass

@bind(None, [POINTER(GLubyte)])
def glGetPolygonStipple(mask): pass

@bind(None, [GLenum, GLenum, GLenum, POINTER(GLvoid), POINTER(GLvoid), POINTER(GLvoid)])
def glGetSeparableFilter(target, format, type, row, column, span): pass

@bind(POINTER(GLubyte), [GLenum])
def glGetString(name): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glGetTexEnvfv(target, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glGetTexEnviv(target, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLdouble)])
def glGetTexGendv(coord, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glGetTexGenfv(coord, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glGetTexGeniv(coord, pname, params): pass

@bind(None, [GLenum, GLint, GLenum, GLenum, POINTER(GLvoid)])
def glGetTexImage(target, level, format, type, pixels): pass

@bind(None, [GLenum, GLint, GLenum, POINTER(GLfloat)])
def glGetTexLevelParameterfv(target, level, pname, params): pass

@bind(None, [GLenum, GLint, GLenum, POINTER(GLint)])
def glGetTexLevelParameteriv(target, level, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glGetTexParameterfv(target, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glGetTexParameteriv(target, pname, params): pass

@bind(None, [GLenum, GLenum])
def glHint(target, mode): pass

@bind(None, [GLenum, GLsizei, GLenum, GLboolean])
def glHistogram(target, width, internalformat, sink): pass

@bind(None, [GLuint])
def glIndexMask(mask): pass

@bind(None, [GLenum, GLsizei, POINTER(GLvoid)])
def glIndexPointer(type, stride, pointer): pass

@bind(None, [GLdouble])
def glIndexd(c): pass

@bind(None, [POINTER(GLdouble)])
def glIndexdv(c): pass

@bind(None, [GLfloat])
def glIndexf(c): pass

@bind(None, [POINTER(GLfloat)])
def glIndexfv(c): pass

@bind(None, [GLint])
def glIndexi(c): pass

@bind(None, [POINTER(GLint)])
def glIndexiv(c): pass

@bind(None, [GLshort])
def glIndexs(c): pass

@bind(None, [POINTER(GLshort)])
def glIndexsv(c): pass

@bind(None, [GLubyte])
def glIndexub(c): pass

@bind(None, [POINTER(GLubyte)])
def glIndexubv(c): pass

@bind(None, [])
def glInitNames(): pass

@bind(None, [GLenum, GLsizei, POINTER(GLvoid)])
def glInterleavedArrays(format, stride, pointer): pass

@bind(GLboolean, [GLenum])
def glIsEnabled(cap): pass

@bind(GLboolean, [GLuint])
def glIsList(list): pass

@bind(GLboolean, [GLuint])
def glIsTexture(texture): pass

@bind(None, [GLenum, GLfloat])
def glLightModelf(pname, param): pass

@bind(None, [GLenum, POINTER(GLfloat)])
def glLightModelfv(pname, params): pass

@bind(None, [GLenum, GLint])
def glLightModeli(pname, param): pass

@bind(None, [GLenum, POINTER(GLint)])
def glLightModeliv(pname, params): pass

@bind(None, [GLenum, GLenum, GLfloat])
def glLightf(light, pname, param): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glLightfv(light, pname, params): pass

@bind(None, [GLenum, GLenum, GLint])
def glLighti(light, pname, param): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glLightiv(light, pname, params): pass

@bind(None, [GLint, GLushort])
def glLineStipple(factor, pattern): pass

@bind(None, [GLfloat])
def glLineWidth(width): pass

@bind(None, [GLuint])
def glListBase(base): pass

@bind(None, [])
def glLoadIdentity(): pass

@bind(None, [POINTER(GLdouble)])
def glLoadMatrixd(m): pass

@bind(None, [POINTER(GLfloat)])
def glLoadMatrixf(m): pass

@bind(None, [GLuint])
def glLoadName(name): pass

@bind(None, [GLenum])
def glLogicOp(opcode): pass

@bind(None, [GLenum, GLdouble, GLdouble, GLint, GLint, POINTER(GLdouble)])
def glMap1d(target, u1, u2, stride, order, points): pass

@bind(None, [GLenum, GLfloat, GLfloat, GLint, GLint, POINTER(GLfloat)])
def glMap1f(target, u1, u2, stride, order, points): pass

@bind(None, [GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, POINTER(GLdouble)])
def glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points): pass

@bind(None, [GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, POINTER(GLfloat)])
def glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points): pass

@bind(None, [GLint, GLdouble, GLdouble])
def glMapGrid1d(un, u1, u2): pass

@bind(None, [GLint, GLfloat, GLfloat])
def glMapGrid1f(un, u1, u2): pass

@bind(None, [GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble])
def glMapGrid2d(un, u1, u2, vn, v1, v2): pass

@bind(None, [GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat])
def glMapGrid2f(un, u1, u2, vn, v1, v2): pass

@bind(None, [GLenum, GLenum, GLfloat])
def glMaterialf(face, pname, param): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glMaterialfv(face, pname, params): pass

@bind(None, [GLenum, GLenum, GLint])
def glMateriali(face, pname, param): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glMaterialiv(face, pname, params): pass

@bind(None, [GLenum])
def glMatrixMode(mode): pass

@bind(None, [GLenum, GLenum, GLboolean])
def glMinmax(target, internalformat, sink): pass

@bind(None, [POINTER(GLdouble)])
def glMultMatrixd(m): pass

@bind(None, [POINTER(GLfloat)])
def glMultMatrixf(m): pass

@bind(None, [GLuint, GLenum])
def glNewList(list, mode): pass

@bind(None, [GLbyte, GLbyte, GLbyte])
def glNormal3b(nx, ny, nz): pass

@bind(None, [POINTER(GLbyte)])
def glNormal3bv(v): pass

@bind(None, [GLdouble, GLdouble, GLdouble])
def glNormal3d(nx, ny, nz): pass

@bind(None, [POINTER(GLdouble)])
def glNormal3dv(v): pass

@bind(None, [GLfloat, GLfloat, GLfloat])
def glNormal3f(nx, ny, nz): pass

@bind(None, [POINTER(GLfloat)])
def glNormal3fv(v): pass

@bind(None, [GLint, GLint, GLint])
def glNormal3i(nx, ny, nz): pass

@bind(None, [POINTER(GLint)])
def glNormal3iv(v): pass

@bind(None, [GLshort, GLshort, GLshort])
def glNormal3s(nx, ny, nz): pass

@bind(None, [POINTER(GLshort)])
def glNormal3sv(v): pass

@bind(None, [GLenum, GLsizei, POINTER(GLvoid)])
def glNormalPointer(type, stride, pointer): pass

@bind(None, [GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble])
def glOrtho(left, right, bottom, top, zNear, zFar): pass

@bind(None, [GLfloat])
def glPassThrough(token): pass

@bind(None, [GLenum, GLint, POINTER(GLfloat)])
def glPixelMapfv(map, mapsize, values): pass

@bind(None, [GLenum, GLint, POINTER(GLuint)])
def glPixelMapuiv(map, mapsize, values): pass

@bind(None, [GLenum, GLint, POINTER(GLushort)])
def glPixelMapusv(map, mapsize, values): pass

@bind(None, [GLenum, GLfloat])
def glPixelStoref(pname, param): pass

@bind(None, [GLenum, GLint])
def glPixelStorei(pname, param): pass

@bind(None, [GLenum, GLfloat])
def glPixelTransferf(pname, param): pass

@bind(None, [GLenum, GLint])
def glPixelTransferi(pname, param): pass

@bind(None, [GLfloat, GLfloat])
def glPixelZoom(xfactor, yfactor): pass

@bind(None, [GLfloat])
def glPointSize(size): pass

@bind(None, [GLenum, GLenum])
def glPolygonMode(face, mode): pass

@bind(None, [GLfloat, GLfloat])
def glPolygonOffset(factor, units): pass

@bind(None, [POINTER(GLubyte)])
def glPolygonStipple(mask): pass

@bind(None, [])
def glPopAttrib(): pass

@bind(None, [])
def glPopClientAttrib(): pass

@bind(None, [])
def glPopMatrix(): pass

@bind(None, [])
def glPopName(): pass

@bind(None, [GLsizei, POINTER(GLuint), POINTER(GLclampf)])
def glPrioritizeTextures(n, textures, priorities): pass

@bind(None, [GLbitfield])
def glPushAttrib(mask): pass

@bind(None, [GLbitfield])
def glPushClientAttrib(mask): pass

@bind(None, [])
def glPushMatrix(): pass

@bind(None, [GLuint])
def glPushName(name): pass

@bind(None, [GLdouble, GLdouble])
def glRasterPos2d(x, y): pass

@bind(None, [POINTER(GLdouble)])
def glRasterPos2dv(v): pass

@bind(None, [GLfloat, GLfloat])
def glRasterPos2f(x, y): pass

@bind(None, [POINTER(GLfloat)])
def glRasterPos2fv(v): pass

@bind(None, [GLint, GLint])
def glRasterPos2i(x, y): pass

@bind(None, [POINTER(GLint)])
def glRasterPos2iv(v): pass

@bind(None, [GLshort, GLshort])
def glRasterPos2s(x, y): pass

@bind(None, [POINTER(GLshort)])
def glRasterPos2sv(v): pass

@bind(None, [GLdouble, GLdouble, GLdouble])
def glRasterPos3d(x, y, z): pass

@bind(None, [POINTER(GLdouble)])
def glRasterPos3dv(v): pass

@bind(None, [GLfloat, GLfloat, GLfloat])
def glRasterPos3f(x, y, z): pass

@bind(None, [POINTER(GLfloat)])
def glRasterPos3fv(v): pass

@bind(None, [GLint, GLint, GLint])
def glRasterPos3i(x, y, z): pass

@bind(None, [POINTER(GLint)])
def glRasterPos3iv(v): pass

@bind(None, [GLshort, GLshort, GLshort])
def glRasterPos3s(x, y, z): pass

@bind(None, [POINTER(GLshort)])
def glRasterPos3sv(v): pass

@bind(None, [GLdouble, GLdouble, GLdouble, GLdouble])
def glRasterPos4d(x, y, z, w): pass

@bind(None, [POINTER(GLdouble)])
def glRasterPos4dv(v): pass

@bind(None, [GLfloat, GLfloat, GLfloat, GLfloat])
def glRasterPos4f(x, y, z, w): pass

@bind(None, [POINTER(GLfloat)])
def glRasterPos4fv(v): pass

@bind(None, [GLint, GLint, GLint, GLint])
def glRasterPos4i(x, y, z, w): pass

@bind(None, [POINTER(GLint)])
def glRasterPos4iv(v): pass

@bind(None, [GLshort, GLshort, GLshort, GLshort])
def glRasterPos4s(x, y, z, w): pass

@bind(None, [POINTER(GLshort)])
def glRasterPos4sv(v): pass

@bind(None, [GLenum])
def glReadBuffer(mode): pass

@bind(None, [GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, POINTER(GLvoid)])
def glReadPixels(x, y, width, height, format, type, pixels): pass

@bind(None, [GLdouble, GLdouble, GLdouble, GLdouble])
def glRectd(x1, y1, x2, y2): pass

@bind(None, [POINTER(GLdouble), POINTER(GLdouble)])
def glRectdv(v1, v2): pass

@bind(None, [GLfloat, GLfloat, GLfloat, GLfloat])
def glRectf(x1, y1, x2, y2): pass

@bind(None, [POINTER(GLfloat), POINTER(GLfloat)])
def glRectfv(v1, v2): pass

@bind(None, [GLint, GLint, GLint, GLint])
def glRecti(x1, y1, x2, y2): pass

@bind(None, [POINTER(GLint), POINTER(GLint)])
def glRectiv(v1, v2): pass

@bind(None, [GLshort, GLshort, GLshort, GLshort])
def glRects(x1, y1, x2, y2): pass

@bind(None, [POINTER(GLshort), POINTER(GLshort)])
def glRectsv(v1, v2): pass

@bind(GLint, [GLenum])
def glRenderMode(mode): pass

@bind(None, [GLenum])
def glResetHistogram(target): pass

@bind(None, [GLenum])
def glResetMinmax(target): pass

@bind(None, [GLdouble, GLdouble, GLdouble, GLdouble])
def glRotated(angle, x, y, z): pass

@bind(None, [GLfloat, GLfloat, GLfloat, GLfloat])
def glRotatef(angle, x, y, z): pass

@bind(None, [GLdouble, GLdouble, GLdouble])
def glScaled(x, y, z): pass

@bind(None, [GLfloat, GLfloat, GLfloat])
def glScalef(x, y, z): pass

@bind(None, [GLint, GLint, GLsizei, GLsizei])
def glScissor(x, y, width, height): pass

@bind(None, [GLsizei, POINTER(GLuint)])
def glSelectBuffer(size, buffer): pass

@bind(None, [GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, POINTER(GLvoid), POINTER(GLvoid)])
def glSeparableFilter2D(target, internalformat, width, height, format, type, row, column): pass

@bind(None, [GLenum])
def glShadeModel(mode): pass

@bind(None, [GLenum, GLint, GLuint])
def glStencilFunc(func, ref, mask): pass

@bind(None, [GLuint])
def glStencilMask(mask): pass

@bind(None, [GLenum, GLenum, GLenum])
def glStencilOp(fail, zfail, zpass): pass

@bind(None, [GLdouble])
def glTexCoord1d(s): pass

@bind(None, [POINTER(GLdouble)])
def glTexCoord1dv(v): pass

@bind(None, [GLfloat])
def glTexCoord1f(s): pass

@bind(None, [POINTER(GLfloat)])
def glTexCoord1fv(v): pass

@bind(None, [GLint])
def glTexCoord1i(s): pass

@bind(None, [POINTER(GLint)])
def glTexCoord1iv(v): pass

@bind(None, [GLshort])
def glTexCoord1s(s): pass

@bind(None, [POINTER(GLshort)])
def glTexCoord1sv(v): pass

@bind(None, [GLdouble, GLdouble])
def glTexCoord2d(s, t): pass

@bind(None, [POINTER(GLdouble)])
def glTexCoord2dv(v): pass

@bind(None, [GLfloat, GLfloat])
def glTexCoord2f(s, t): pass

@bind(None, [POINTER(GLfloat)])
def glTexCoord2fv(v): pass

@bind(None, [GLint, GLint])
def glTexCoord2i(s, t): pass

@bind(None, [POINTER(GLint)])
def glTexCoord2iv(v): pass

@bind(None, [GLshort, GLshort])
def glTexCoord2s(s, t): pass

@bind(None, [POINTER(GLshort)])
def glTexCoord2sv(v): pass

@bind(None, [GLdouble, GLdouble, GLdouble])
def glTexCoord3d(s, t, r): pass

@bind(None, [POINTER(GLdouble)])
def glTexCoord3dv(v): pass

@bind(None, [GLfloat, GLfloat, GLfloat])
def glTexCoord3f(s, t, r): pass

@bind(None, [POINTER(GLfloat)])
def glTexCoord3fv(v): pass

@bind(None, [GLint, GLint, GLint])
def glTexCoord3i(s, t, r): pass

@bind(None, [POINTER(GLint)])
def glTexCoord3iv(v): pass

@bind(None, [GLshort, GLshort, GLshort])
def glTexCoord3s(s, t, r): pass

@bind(None, [POINTER(GLshort)])
def glTexCoord3sv(v): pass

@bind(None, [GLdouble, GLdouble, GLdouble, GLdouble])
def glTexCoord4d(s, t, r, q): pass

@bind(None, [POINTER(GLdouble)])
def glTexCoord4dv(v): pass

@bind(None, [GLfloat, GLfloat, GLfloat, GLfloat])
def glTexCoord4f(s, t, r, q): pass

@bind(None, [POINTER(GLfloat)])
def glTexCoord4fv(v): pass

@bind(None, [GLint, GLint, GLint, GLint])
def glTexCoord4i(s, t, r, q): pass

@bind(None, [POINTER(GLint)])
def glTexCoord4iv(v): pass

@bind(None, [GLshort, GLshort, GLshort, GLshort])
def glTexCoord4s(s, t, r, q): pass

@bind(None, [POINTER(GLshort)])
def glTexCoord4sv(v): pass

@bind(None, [GLint, GLenum, GLsizei, POINTER(GLvoid)])
def glTexCoordPointer(size, type, stride, pointer): pass

@bind(None, [GLenum, GLenum, GLfloat])
def glTexEnvf(target, pname, param): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glTexEnvfv(target, pname, params): pass

@bind(None, [GLenum, GLenum, GLint])
def glTexEnvi(target, pname, param): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glTexEnviv(target, pname, params): pass

@bind(None, [GLenum, GLenum, GLdouble])
def glTexGend(coord, pname, param): pass

@bind(None, [GLenum, GLenum, POINTER(GLdouble)])
def glTexGendv(coord, pname, params): pass

@bind(None, [GLenum, GLenum, GLfloat])
def glTexGenf(coord, pname, param): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glTexGenfv(coord, pname, params): pass

@bind(None, [GLenum, GLenum, GLint])
def glTexGeni(coord, pname, param): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glTexGeniv(coord, pname, params): pass

@bind(None, [GLenum, GLint, GLenum, GLsizei, GLint, GLenum, GLenum, POINTER(GLvoid)])
def glTexImage1D(target, level, internalformat, width, border, format, type, pixels): pass

@bind(None, [GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLenum, GLenum, POINTER(GLvoid)])
def glTexImage2D(target, level, internalformat, width, height, border, format, type, pixels): pass

@bind(None, [GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, POINTER(GLvoid)])
def glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels): pass

@bind(None, [GLenum, GLenum, GLfloat])
def glTexParameterf(target, pname, param): pass

@bind(None, [GLenum, GLenum, POINTER(GLfloat)])
def glTexParameterfv(target, pname, params): pass

@bind(None, [GLenum, GLenum, GLint])
def glTexParameteri(target, pname, param): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glTexParameteriv(target, pname, params): pass

@bind(None, [GLenum, GLint, GLint, GLsizei, GLenum, GLenum, POINTER(GLvoid)])
def glTexSubImage1D(target, level, xoffset, width, format, type, pixels): pass

@bind(None, [GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, POINTER(GLvoid)])
def glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels): pass

@bind(None, [GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, POINTER(GLvoid)])
def glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels): pass

@bind(None, [GLdouble, GLdouble, GLdouble])
def glTranslated(x, y, z): pass

@bind(None, [GLfloat, GLfloat, GLfloat])
def glTranslatef(x, y, z): pass

@bind(None, [GLdouble, GLdouble])
def glVertex2d(x, y): pass

@bind(None, [POINTER(GLdouble)])
def glVertex2dv(v): pass

@bind(None, [GLfloat, GLfloat])
def glVertex2f(x, y): pass

@bind(None, [POINTER(GLfloat)])
def glVertex2fv(v): pass

@bind(None, [GLint, GLint])
def glVertex2i(x, y): pass

@bind(None, [POINTER(GLint)])
def glVertex2iv(v): pass

@bind(None, [GLshort, GLshort])
def glVertex2s(x, y): pass

@bind(None, [POINTER(GLshort)])
def glVertex2sv(v): pass

@bind(None, [GLdouble, GLdouble, GLdouble])
def glVertex3d(x, y, z): pass

@bind(None, [POINTER(GLdouble)])
def glVertex3dv(v): pass

@bind(None, [GLfloat, GLfloat, GLfloat])
def glVertex3f(x, y, z): pass

@bind(None, [POINTER(GLfloat)])
def glVertex3fv(v): pass

@bind(None, [GLint, GLint, GLint])
def glVertex3i(x, y, z): pass

@bind(None, [POINTER(GLint)])
def glVertex3iv(v): pass

@bind(None, [GLshort, GLshort, GLshort])
def glVertex3s(x, y, z): pass

@bind(None, [POINTER(GLshort)])
def glVertex3sv(v): pass

@bind(None, [GLdouble, GLdouble, GLdouble, GLdouble])
def glVertex4d(x, y, z, w): pass

@bind(None, [POINTER(GLdouble)])
def glVertex4dv(v): pass

@bind(None, [GLfloat, GLfloat, GLfloat, GLfloat])
def glVertex4f(x, y, z, w): pass

@bind(None, [POINTER(GLfloat)])
def glVertex4fv(v): pass

@bind(None, [GLint, GLint, GLint, GLint])
def glVertex4i(x, y, z, w): pass

@bind(None, [POINTER(GLint)])
def glVertex4iv(v): pass

@bind(None, [GLshort, GLshort, GLshort, GLshort])
def glVertex4s(x, y, z, w): pass

@bind(None, [POINTER(GLshort)])
def glVertex4sv(v): pass

@bind(None, [GLint, GLenum, GLsizei, POINTER(GLvoid)])
def glVertexPointer(size, type, stride, pointer): pass

@bind(None, [GLint, GLint, GLsizei, GLsizei])
def glViewport(x, y, width, height): pass


@bind(None, [GLclampf, GLboolean])
def glSampleCoverage(arg_0, arg_1): pass

@bind(None, [GLenum])
def glSamplePass(arg_0): pass


@bind(None, [POINTER(GLfloat)])
def glLoadTransposeMatrixf(arg_0): pass

@bind(None, [POINTER(GLdouble)])
def glLoadTransposeMatrixd(arg_0): pass

@bind(None, [POINTER(GLfloat)])
def glMultTransposeMatrixf(arg_0): pass

@bind(None, [POINTER(GLdouble)])
def glMultTransposeMatrixd(arg_0): pass


@bind(None, [GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, POINTER(GLvoid)])
def glCompressedTexImage3D(arg_0, arg_1, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7, arg_8): pass

@bind(None, [GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, POINTER(GLvoid)])
def glCompressedTexImage2D(arg_0, arg_1, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7): pass

@bind(None, [GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, POINTER(GLvoid)])
def glCompressedTexImage1D(arg_0, arg_1, arg_2, arg_3, arg_4, arg_5, arg_6): pass

@bind(None, [GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, POINTER(GLvoid)])
def glCompressedTexSubImage3D(arg_0, arg_1, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7, arg_8, arg_9, arg_10): pass

@bind(None, [GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, POINTER(GLvoid)])
def glCompressedTexSubImage2D(arg_0, arg_1, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7, arg_8): pass

@bind(None, [GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, POINTER(GLvoid)])
def glCompressedTexSubImage1D(arg_0, arg_1, arg_2, arg_3, arg_4, arg_5, arg_6): pass

@bind(None, [GLenum, GLint, POINTER(GLvoid)])
def glGetCompressedTexImage(arg_0, arg_1, arg_2): pass


@bind(None, [GLenum])
def glActiveTexture(arg_0): pass

@bind(None, [GLenum])
def glClientActiveTexture(arg_0): pass

@bind(None, [GLenum, GLdouble])
def glMultiTexCoord1d(arg_0, arg_1): pass

@bind(None, [GLenum, POINTER(GLdouble)])
def glMultiTexCoord1dv(arg_0, arg_1): pass

@bind(None, [GLenum, GLfloat])
def glMultiTexCoord1f(arg_0, arg_1): pass

@bind(None, [GLenum, POINTER(GLfloat)])
def glMultiTexCoord1fv(arg_0, arg_1): pass

@bind(None, [GLenum, GLint])
def glMultiTexCoord1i(arg_0, arg_1): pass

@bind(None, [GLenum, POINTER(GLint)])
def glMultiTexCoord1iv(arg_0, arg_1): pass

@bind(None, [GLenum, GLshort])
def glMultiTexCoord1s(arg_0, arg_1): pass

@bind(None, [GLenum, POINTER(GLshort)])
def glMultiTexCoord1sv(arg_0, arg_1): pass

@bind(None, [GLenum, GLdouble, GLdouble])
def glMultiTexCoord2d(arg_0, arg_1, arg_2): pass

@bind(None, [GLenum, POINTER(GLdouble)])
def glMultiTexCoord2dv(arg_0, arg_1): pass

@bind(None, [GLenum, GLfloat, GLfloat])
def glMultiTexCoord2f(arg_0, arg_1, arg_2): pass

@bind(None, [GLenum, POINTER(GLfloat)])
def glMultiTexCoord2fv(arg_0, arg_1): pass

@bind(None, [GLenum, GLint, GLint])
def glMultiTexCoord2i(arg_0, arg_1, arg_2): pass

@bind(None, [GLenum, POINTER(GLint)])
def glMultiTexCoord2iv(arg_0, arg_1): pass

@bind(None, [GLenum, GLshort, GLshort])
def glMultiTexCoord2s(arg_0, arg_1, arg_2): pass

@bind(None, [GLenum, POINTER(GLshort)])
def glMultiTexCoord2sv(arg_0, arg_1): pass

@bind(None, [GLenum, GLdouble, GLdouble, GLdouble])
def glMultiTexCoord3d(arg_0, arg_1, arg_2, arg_3): pass

@bind(None, [GLenum, POINTER(GLdouble)])
def glMultiTexCoord3dv(arg_0, arg_1): pass

@bind(None, [GLenum, GLfloat, GLfloat, GLfloat])
def glMultiTexCoord3f(arg_0, arg_1, arg_2, arg_3): pass

@bind(None, [GLenum, POINTER(GLfloat)])
def glMultiTexCoord3fv(arg_0, arg_1): pass

@bind(None, [GLenum, GLint, GLint, GLint])
def glMultiTexCoord3i(arg_0, arg_1, arg_2, arg_3): pass

@bind(None, [GLenum, POINTER(GLint)])
def glMultiTexCoord3iv(arg_0, arg_1): pass

@bind(None, [GLenum, GLshort, GLshort, GLshort])
def glMultiTexCoord3s(arg_0, arg_1, arg_2, arg_3): pass

@bind(None, [GLenum, POINTER(GLshort)])
def glMultiTexCoord3sv(arg_0, arg_1): pass

@bind(None, [GLenum, GLdouble, GLdouble, GLdouble, GLdouble])
def glMultiTexCoord4d(arg_0, arg_1, arg_2, arg_3, arg_4): pass

@bind(None, [GLenum, POINTER(GLdouble)])
def glMultiTexCoord4dv(arg_0, arg_1): pass

@bind(None, [GLenum, GLfloat, GLfloat, GLfloat, GLfloat])
def glMultiTexCoord4f(arg_0, arg_1, arg_2, arg_3, arg_4): pass

@bind(None, [GLenum, POINTER(GLfloat)])
def glMultiTexCoord4fv(arg_0, arg_1): pass

@bind(None, [GLenum, GLint, GLint, GLint, GLint])
def glMultiTexCoord4i(arg_0, arg_1, arg_2, arg_3, arg_4): pass

@bind(None, [GLenum, POINTER(GLint)])
def glMultiTexCoord4iv(arg_0, arg_1): pass

@bind(None, [GLenum, GLshort, GLshort, GLshort, GLshort])
def glMultiTexCoord4s(arg_0, arg_1, arg_2, arg_3, arg_4): pass

@bind(None, [GLenum, POINTER(GLshort)])
def glMultiTexCoord4sv(arg_0, arg_1): pass


@bind(None, [GLfloat])
def glFogCoordf(arg_0): pass

@bind(None, [POINTER(GLfloat)])
def glFogCoordfv(arg_0): pass

@bind(None, [GLdouble])
def glFogCoordd(arg_0): pass

@bind(None, [POINTER(GLdouble)])
def glFogCoorddv(arg_0): pass

@bind(None, [GLenum, GLsizei, POINTER(GLvoid)])
def glFogCoordPointer(arg_0, arg_1, arg_2): pass


@bind(None, [GLbyte, GLbyte, GLbyte])
def glSecondaryColor3b(arg_0, arg_1, arg_2): pass

@bind(None, [POINTER(GLbyte)])
def glSecondaryColor3bv(arg_0): pass

@bind(None, [GLdouble, GLdouble, GLdouble])
def glSecondaryColor3d(arg_0, arg_1, arg_2): pass

@bind(None, [POINTER(GLdouble)])
def glSecondaryColor3dv(arg_0): pass

@bind(None, [GLfloat, GLfloat, GLfloat])
def glSecondaryColor3f(arg_0, arg_1, arg_2): pass

@bind(None, [POINTER(GLfloat)])
def glSecondaryColor3fv(arg_0): pass

@bind(None, [GLint, GLint, GLint])
def glSecondaryColor3i(arg_0, arg_1, arg_2): pass

@bind(None, [POINTER(GLint)])
def glSecondaryColor3iv(arg_0): pass

@bind(None, [GLshort, GLshort, GLshort])
def glSecondaryColor3s(arg_0, arg_1, arg_2): pass

@bind(None, [POINTER(GLshort)])
def glSecondaryColor3sv(arg_0): pass

@bind(None, [GLubyte, GLubyte, GLubyte])
def glSecondaryColor3ub(arg_0, arg_1, arg_2): pass

@bind(None, [POINTER(GLubyte)])
def glSecondaryColor3ubv(arg_0): pass

@bind(None, [GLuint, GLuint, GLuint])
def glSecondaryColor3ui(arg_0, arg_1, arg_2): pass

@bind(None, [POINTER(GLuint)])
def glSecondaryColor3uiv(arg_0): pass

@bind(None, [GLushort, GLushort, GLushort])
def glSecondaryColor3us(arg_0, arg_1, arg_2): pass

@bind(None, [POINTER(GLushort)])
def glSecondaryColor3usv(arg_0): pass

@bind(None, [GLint, GLenum, GLsizei, POINTER(GLvoid)])
def glSecondaryColorPointer(arg_0, arg_1, arg_2, arg_3): pass


@bind(None, [GLenum, GLfloat])
def glPointParameterf(pname, param): pass

@bind(None, [GLenum, POINTER(GLfloat)])
def glPointParameterfv(pname, params): pass

@bind(None, [GLenum, GLint])
def glPointParameteri(pname, param): pass

@bind(None, [GLenum, POINTER(GLint)])
def glPointParameteriv(pname, params): pass


@bind(None, [GLenum, GLenum, GLenum, GLenum])
def glBlendFuncSeparate(arg_0, arg_1, arg_2, arg_3): pass


@bind(None, [GLenum, POINTER(GLint), POINTER(GLsizei), GLsizei])
def glMultiDrawArrays(arg_0, arg_1, arg_2, arg_3): pass

@bind(None, [GLenum, POINTER(GLsizei), GLenum, POINTER(POINTER(GLvoid)), GLsizei])
def glMultiDrawElements(arg_0, arg_1, arg_2, arg_3, arg_4): pass


@bind(None, [GLdouble, GLdouble])
def glWindowPos2d(arg_0, arg_1): pass

@bind(None, [POINTER(GLdouble)])
def glWindowPos2dv(arg_0): pass

@bind(None, [GLfloat, GLfloat])
def glWindowPos2f(arg_0, arg_1): pass

@bind(None, [POINTER(GLfloat)])
def glWindowPos2fv(arg_0): pass

@bind(None, [GLint, GLint])
def glWindowPos2i(arg_0, arg_1): pass

@bind(None, [POINTER(GLint)])
def glWindowPos2iv(arg_0): pass

@bind(None, [GLshort, GLshort])
def glWindowPos2s(arg_0, arg_1): pass

@bind(None, [POINTER(GLshort)])
def glWindowPos2sv(arg_0): pass

@bind(None, [GLdouble, GLdouble, GLdouble])
def glWindowPos3d(arg_0, arg_1, arg_2): pass

@bind(None, [POINTER(GLdouble)])
def glWindowPos3dv(arg_0): pass

@bind(None, [GLfloat, GLfloat, GLfloat])
def glWindowPos3f(arg_0, arg_1, arg_2): pass

@bind(None, [POINTER(GLfloat)])
def glWindowPos3fv(arg_0): pass

@bind(None, [GLint, GLint, GLint])
def glWindowPos3i(arg_0, arg_1, arg_2): pass

@bind(None, [POINTER(GLint)])
def glWindowPos3iv(arg_0): pass

@bind(None, [GLshort, GLshort, GLshort])
def glWindowPos3s(arg_0, arg_1, arg_2): pass

@bind(None, [POINTER(GLshort)])
def glWindowPos3sv(arg_0): pass


@bind(None, [GLsizei, POINTER(GLuint)])
def glGenQueries(n, ids): pass

@bind(None, [GLsizei, POINTER(GLuint)])
def glDeleteQueries(n, ids): pass

@bind(GLboolean, [GLuint])
def glIsQuery(id): pass

@bind(None, [GLenum, GLuint])
def glBeginQuery(target, id): pass

@bind(None, [GLenum])
def glEndQuery(target): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glGetQueryiv(target, pname, params): pass

@bind(None, [GLuint, GLenum, POINTER(GLint)])
def glGetQueryObjectiv(id, pname, params): pass

@bind(None, [GLuint, GLenum, POINTER(GLuint)])
def glGetQueryObjectuiv(id, pname, params): pass


@bind(None, [GLenum, GLuint])
def glBindBuffer(target, buffer): pass

@bind(None, [GLsizei, POINTER(GLuint)])
def glDeleteBuffers(n, buffers): pass

@bind(None, [GLsizei, POINTER(GLuint)])
def glGenBuffers(n, buffers): pass

@bind(GLboolean, [GLuint])
def glIsBuffer(buffer): pass

@bind(None, [GLenum, GLsizeiptr, POINTER(GLvoid), GLenum])
def glBufferData(target, size, data, usage): pass

@bind(None, [GLenum, GLintptr, GLsizeiptr, POINTER(GLvoid)])
def glBufferSubData(target, offset, size, data): pass

@bind(None, [GLenum, GLintptr, GLsizeiptr, POINTER(GLvoid)])
def glGetBufferSubData(target, offset, size, data): pass

@bind(POINTER(GLvoid), [GLenum, GLenum])
def glMapBuffer(target, access): pass

@bind(GLboolean, [GLenum])
def glUnmapBuffer(target): pass

@bind(None, [GLenum, GLenum, POINTER(GLint)])
def glGetBufferParameteriv(target, pname, params): pass

@bind(None, [GLenum, GLenum, POINTER(POINTER(GLvoid))])
def glGetBufferPointerv(target, pname, params): pass


@bind(None, [GLsizei, POINTER(GLenum)])
def glDrawBuffers(n, bufs): pass

@bind(None, [GLuint, GLdouble])
def glVertexAttrib1d(index, x): pass

@bind(None, [GLuint, POINTER(GLdouble)])
def glVertexAttrib1dv(index, v): pass

@bind(None, [GLuint, GLfloat])
def glVertexAttrib1f(index, x): pass

@bind(None, [GLuint, POINTER(GLfloat)])
def glVertexAttrib1fv(index, v): pass

@bind(None, [GLuint, GLshort])
def glVertexAttrib1s(index, x): pass

@bind(None, [GLuint, POINTER(GLshort)])
def glVertexAttrib1sv(index, v): pass

@bind(None, [GLuint, GLdouble, GLdouble])
def glVertexAttrib2d(index, x, y): pass

@bind(None, [GLuint, POINTER(GLdouble)])
def glVertexAttrib2dv(index, v): pass

@bind(None, [GLuint, GLfloat, GLfloat])
def glVertexAttrib2f(index, x, y): pass

@bind(None, [GLuint, POINTER(GLfloat)])
def glVertexAttrib2fv(index, v): pass

@bind(None, [GLuint, GLshort, GLshort])
def glVertexAttrib2s(index, x, y): pass

@bind(None, [GLuint, POINTER(GLshort)])
def glVertexAttrib2sv(index, v): pass

@bind(None, [GLuint, GLdouble, GLdouble, GLdouble])
def glVertexAttrib3d(index, x, y, z): pass

@bind(None, [GLuint, POINTER(GLdouble)])
def glVertexAttrib3dv(index, v): pass

@bind(None, [GLuint, GLfloat, GLfloat, GLfloat])
def glVertexAttrib3f(index, x, y, z): pass

@bind(None, [GLuint, POINTER(GLfloat)])
def glVertexAttrib3fv(index, v): pass

@bind(None, [GLuint, GLshort, GLshort, GLshort])
def glVertexAttrib3s(index, x, y, z): pass

@bind(None, [GLuint, POINTER(GLshort)])
def glVertexAttrib3sv(index, v): pass

@bind(None, [GLuint, POINTER(GLbyte)])
def glVertexAttrib4Nbv(index, v): pass

@bind(None, [GLuint, POINTER(GLint)])
def glVertexAttrib4Niv(index, v): pass

@bind(None, [GLuint, POINTER(GLshort)])
def glVertexAttrib4Nsv(index, v): pass

@bind(None, [GLuint, GLubyte, GLubyte, GLubyte, GLubyte])
def glVertexAttrib4Nub(index, x, y, z, w): pass

@bind(None, [GLuint, POINTER(GLubyte)])
def glVertexAttrib4Nubv(index, v): pass

@bind(None, [GLuint, POINTER(GLuint)])
def glVertexAttrib4Nuiv(index, v): pass

@bind(None, [GLuint, POINTER(GLushort)])
def glVertexAttrib4Nusv(index, v): pass

@bind(None, [GLuint, POINTER(GLbyte)])
def glVertexAttrib4bv(index, v): pass

@bind(None, [GLuint, GLdouble, GLdouble, GLdouble, GLdouble])
def glVertexAttrib4d(index, x, y, z, w): pass

@bind(None, [GLuint, POINTER(GLdouble)])
def glVertexAttrib4dv(index, v): pass

@bind(None, [GLuint, GLfloat, GLfloat, GLfloat, GLfloat])
def glVertexAttrib4f(index, x, y, z, w): pass

@bind(None, [GLuint, POINTER(GLfloat)])
def glVertexAttrib4fv(index, v): pass

@bind(None, [GLuint, POINTER(GLint)])
def glVertexAttrib4iv(index, v): pass

@bind(None, [GLuint, GLshort, GLshort, GLshort, GLshort])
def glVertexAttrib4s(index, x, y, z, w): pass

@bind(None, [GLuint, POINTER(GLshort)])
def glVertexAttrib4sv(index, v): pass

@bind(None, [GLuint, POINTER(GLubyte)])
def glVertexAttrib4ubv(index, v): pass

@bind(None, [GLuint, POINTER(GLuint)])
def glVertexAttrib4uiv(index, v): pass

@bind(None, [GLuint, POINTER(GLushort)])
def glVertexAttrib4usv(index, v): pass

@bind(None, [GLuint, GLint, GLenum, GLboolean, GLsizei, POINTER(GLvoid)])
def glVertexAttribPointer(index, size, type, normalized, stride, pointer): pass

@bind(None, [GLuint])
def glEnableVertexAttribArray(index): pass

@bind(None, [GLuint])
def glDisableVertexAttribArray(index): pass

@bind(None, [GLuint, GLenum, POINTER(GLdouble)])
def glGetVertexAttribdv(index, pname, params): pass

@bind(None, [GLuint, GLenum, POINTER(GLfloat)])
def glGetVertexAttribfv(index, pname, params): pass

@bind(None, [GLuint, GLenum, POINTER(GLint)])
def glGetVertexAttribiv(index, pname, params): pass

@bind(None, [GLuint, GLenum, POINTER(POINTER(GLvoid))])
def glGetVertexAttribPointerv(index, pname, pointer): pass

@bind(None, [GLuint])
def glDeleteShader(shader): pass

@bind(None, [GLuint, GLuint])
def glDetachShader(program, shader): pass

@bind(GLuint, [GLenum])
def glCreateShader(type): pass

@bind(None, [GLuint, GLsizei, POINTER(POINTER(GLchar)), POINTER(GLint)])
def glShaderSource(shader, count, string, length): pass

@bind(None, [GLuint])
def glCompileShader(shader): pass

@bind(GLuint, [])
def glCreateProgram(): pass

@bind(None, [GLuint, GLuint])
def glAttachShader(program, shader): pass

@bind(None, [GLuint])
def glLinkProgram(program): pass

@bind(None, [GLuint])
def glUseProgram(program): pass

@bind(None, [GLuint])
def glDeleteProgram(program): pass

@bind(None, [GLuint])
def glValidateProgram(program): pass

@bind(None, [GLint, GLfloat])
def glUniform1f(location, v0): pass

@bind(None, [GLint, GLfloat, GLfloat])
def glUniform2f(location, v0, v1): pass

@bind(None, [GLint, GLfloat, GLfloat, GLfloat])
def glUniform3f(location, v0, v1, v2): pass

@bind(None, [GLint, GLfloat, GLfloat, GLfloat, GLfloat])
def glUniform4f(location, v0, v1, v2, v3): pass

@bind(None, [GLint, GLint])
def glUniform1i(location, v0): pass

@bind(None, [GLint, GLint, GLint])
def glUniform2i(location, v0, v1): pass

@bind(None, [GLint, GLint, GLint, GLint])
def glUniform3i(location, v0, v1, v2): pass

@bind(None, [GLint, GLint, GLint, GLint, GLint])
def glUniform4i(location, v0, v1, v2, v3): pass

@bind(None, [GLint, GLsizei, POINTER(GLfloat)])
def glUniform1fv(location, count, value): pass

@bind(None, [GLint, GLsizei, POINTER(GLfloat)])
def glUniform2fv(location, count, value): pass

@bind(None, [GLint, GLsizei, POINTER(GLfloat)])
def glUniform3fv(location, count, value): pass

@bind(None, [GLint, GLsizei, POINTER(GLfloat)])
def glUniform4fv(location, count, value): pass

@bind(None, [GLint, GLsizei, POINTER(GLint)])
def glUniform1iv(location, count, value): pass

@bind(None, [GLint, GLsizei, POINTER(GLint)])
def glUniform2iv(location, count, value): pass

@bind(None, [GLint, GLsizei, POINTER(GLint)])
def glUniform3iv(location, count, value): pass

@bind(None, [GLint, GLsizei, POINTER(GLint)])
def glUniform4iv(location, count, value): pass

@bind(None, [GLint, GLsizei, GLboolean, POINTER(GLfloat)])
def glUniformMatrix2fv(location, count, transpose, value): pass

@bind(None, [GLint, GLsizei, GLboolean, POINTER(GLfloat)])
def glUniformMatrix3fv(location, count, transpose, value): pass

@bind(None, [GLint, GLsizei, GLboolean, POINTER(GLfloat)])
def glUniformMatrix4fv(location, count, transpose, value): pass

@bind(GLboolean, [GLuint])
def glIsShader(shader): pass

@bind(GLboolean, [GLuint])
def glIsProgram(program): pass

@bind(None, [GLuint, GLenum, POINTER(GLint)])
def glGetShaderiv(shader, pname, params): pass

@bind(None, [GLuint, GLenum, POINTER(GLint)])
def glGetProgramiv(program, pname, params): pass

@bind(None, [GLuint, GLsizei, POINTER(GLsizei), POINTER(GLuint)])
def glGetAttachedShaders(program, maxCount, count, shaders): pass

@bind(None, [GLuint, GLsizei, POINTER(GLsizei), POINTER(GLchar)])
def glGetShaderInfoLog(shader, bufSize, length, infoLog): pass

@bind(None, [GLuint, GLsizei, POINTER(GLsizei), POINTER(GLchar)])
def glGetProgramInfoLog(program, bufSize, length, infoLog): pass

@bind(GLint, [GLuint, POINTER(GLchar)])
def glGetUniformLocation(program, name): pass

@bind(None, [GLuint, GLuint, GLsizei, POINTER(GLsizei), POINTER(GLsizei), POINTER(GLenum), POINTER(GLchar)])
def glGetActiveUniform(program, index, bufSize, length, size, type, name): pass

@bind(None, [GLuint, GLint, POINTER(GLfloat)])
def glGetUniformfv(program, location, params): pass

@bind(None, [GLuint, GLint, POINTER(GLint)])
def glGetUniformiv(program, location, params): pass

@bind(None, [GLuint, GLsizei, POINTER(GLsizei), POINTER(GLchar)])
def glGetShaderSource(shader, bufSize, length, source): pass

@bind(None, [GLuint, GLuint, POINTER(GLchar)])
def glBindAttribLocation(program, index, name): pass

@bind(None, [GLuint, GLuint, GLsizei, POINTER(GLsizei), POINTER(GLsizei), POINTER(GLenum), POINTER(GLchar)])
def glGetActiveAttrib(program, index, bufSize, length, size, type, name): pass

@bind(GLint, [GLuint, POINTER(GLchar)])
def glGetAttribLocation(program, name): pass

@bind(None, [GLenum, GLenum, GLint, GLuint])
def glStencilFuncSeparate(face, func, ref, mask): pass

@bind(None, [GLenum, GLenum, GLenum, GLenum])
def glStencilOpSeparate(face, fail, zfail, zpass): pass

@bind(None, [GLenum, GLuint])
def glStencilMaskSeparate(face, mask): pass

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#~ End of code generated from "OpenGL/gl.h"
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

